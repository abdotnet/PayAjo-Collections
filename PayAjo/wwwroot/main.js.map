{"version":3,"sources":["webpack:///../src/$_lazy_route_resource lazy namespace object","webpack:///../src/app/account/account.component.css","webpack:///../src/app/account/account.component.html","webpack:///../src/app/account/account.component.ts","webpack:///../src/app/account/agent.component.html","webpack:///../src/app/account/agent.component.ts","webpack:///../src/app/account/changepassword.component.html","webpack:///../src/app/account/changepassword.component.ts","webpack:///../src/app/account/forgotpass.component.html","webpack:///../src/app/account/forgotpass.component.ts","webpack:///../src/app/account/login.component.css","webpack:///../src/app/account/login.component.html","webpack:///../src/app/account/login.component.ts","webpack:///../src/app/account/profile.component.html","webpack:///../src/app/account/profile.component.ts","webpack:///../src/app/account/users.component.html","webpack:///../src/app/account/users.component.ts","webpack:///../src/app/app.component.css","webpack:///../src/app/app.component.html","webpack:///../src/app/app.component.ts","webpack:///../src/app/app.module.ts","webpack:///../src/app/customer/activecustomer.component.html","webpack:///../src/app/customer/activecustomer.component.ts","webpack:///../src/app/customer/createcustomer.component.html","webpack:///../src/app/customer/createcustomer.component.ts","webpack:///../src/app/customer/customer.component.html","webpack:///../src/app/customer/customer.component.ts","webpack:///../src/app/customer/inactivecustomer.component.html","webpack:///../src/app/customer/inactivecustomer.component.ts","webpack:///../src/app/customer/updatecustomer.component.html","webpack:///../src/app/customer/updatecustomer.component.ts","webpack:///../src/app/customer/viewcustomer.component.html","webpack:///../src/app/customer/viewcustomer.component.ts","webpack:///../src/app/dashboard/dashboard.component.css","webpack:///../src/app/dashboard/dashboard.component.html","webpack:///../src/app/dashboard/dashboard.component.ts","webpack:///../src/app/feecharges/smsdebit.component.html","webpack:///../src/app/feecharges/smsdebit.component.ts","webpack:///../src/app/service/account.service.ts","webpack:///../src/app/service/customer.service.ts","webpack:///../src/app/service/data.service.ts","webpack:///../src/app/service/report.service.ts","webpack:///../src/app/service/storage.service.ts","webpack:///../src/app/service/transaction.service.ts","webpack:///../src/app/service/withdrawal.service.ts","webpack:///../src/app/shared/Constants.ts","webpack:///../src/app/shared/model.ts","webpack:///../src/app/shared/navigation/navigation.component.html","webpack:///../src/app/shared/navigation/navigation.component.ts","webpack:///../src/app/shared/navigation/topnav.component.html","webpack:///../src/app/shared/navigation/topnav.component.ts","webpack:///../src/app/shared/sequencepage.ts","webpack:///../src/app/transaction/createtransaction.component.css","webpack:///../src/app/transaction/createtransaction.component.html","webpack:///../src/app/transaction/createtransaction.component.ts","webpack:///../src/app/transaction/credittransaction.component.html","webpack:///../src/app/transaction/credittransaction.component.ts","webpack:///../src/app/transaction/debittransaction.component.html","webpack:///../src/app/transaction/debittransaction.component.ts","webpack:///../src/app/transaction/transaction.component.html","webpack:///../src/app/transaction/transaction.component.ts","webpack:///../src/app/transaction/transactionlog.component.html","webpack:///../src/app/transaction/transactionlog.component.ts","webpack:///../src/app/withdrawal/approvedwithdrawal.component.html","webpack:///../src/app/withdrawal/approvedwithdrawal.component.ts","webpack:///../src/app/withdrawal/createwithdrawal.component.html","webpack:///../src/app/withdrawal/createwithdrawal.component.ts","webpack:///../src/app/withdrawal/paidwithdrawal.component.html","webpack:///../src/app/withdrawal/paidwithdrawal.component.ts","webpack:///../src/app/withdrawal/withdrawal.component.html","webpack:///../src/app/withdrawal/withdrawal.component.ts","webpack:///../src/app/withdrawal/withdrawalagent.component.html","webpack:///../src/app/withdrawal/withdrawalagent.component.ts","webpack:///../src/environments/environment.ts","webpack:///../src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n    <app-navigation></app-navigation>\\n    <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n    <app-topnav></app-topnav>\\n    <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n   </div>\\n   <div class=\\\"content content-custom\\\">\\n    <div class=\\\"card \\\">\\n      <div class=\\\"card-header \\\">\\n          <h4 class=\\\"card-title\\\">Create User (Agent or Administrator) </h4>\\n      </div>\\n      <div class=\\\"card-body \\\">\\n        <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6\\\">\\n          <form method=\\\"#\\\" action=\\\"#\\\">\\n              <label>First Name</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"user.FirstName\\\"  class=\\\"form-control\\\">\\n              </div>\\n              <label>Last Name</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"LastName\\\"  [(ngModel)]=\\\"user.LastName\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Email Address</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" name=\\\"EmailAddress\\\" [(ngModel)]=\\\"user.EmailAddress\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Address</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"Address\\\" [(ngModel)]=\\\"user.Address\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Mobile</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"Mobile\\\" [(ngModel)]=\\\"user.Mobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n              </div>\\n              <label>Username</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"UserId\\\" [(ngModel)]=\\\"user.UserName\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n              </div>\\n              <label>Gender</label>\\n              <select class=\\\"form-control form-control-sm\\\" name=\\\"gender\\\" [(ngModel)]=\\\"user.Gender\\\">\\n                <option selected=\\\"selected\\\" value=\\\"Male\\\">\\n                    Male\\n                 </option>\\n                  <option value=\\\"Female\\\">\\n                     Female\\n                 </option>\\n           </select>\\n              <label>Roles</label>\\n                 <select class=\\\"form-control form-control-sm\\\" name=\\\"role\\\" [(ngModel)]=\\\"user.Role\\\">\\n                      <option selected=\\\"selected\\\" value=\\\" Merchant Agent\\\">\\n                          Merchant Agent\\n                       </option>\\n                        <option value=\\\"Merchant Admin\\\">\\n                            Merchant Admin\\n                       </option>\\n                 </select>\\n                 <label>Default Password: &nbsp; <strong>password1</strong></label>\\n          </form>\\n         </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"card-footer \\\">\\n          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-3\\\" (click)=\\\"Ok(user)\\\" style=\\\"background-color: orange\\\">Save User </a>\\n\\n          &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-3\\\" [routerLink]=\\\"['/agent']\\\" > Back to List </a>\\n      </div>\\n  </div>\\n  </div>\\n\\n   </div>\\n   </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminUser } from '../shared/model';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../service/account.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { StorageService } from '../service/storage.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n\n  user: AdminUser = new AdminUser();\n\n  constructor(private router: Router, private toastr: ToastrService,\n    private account: AccountService,\n       private spinnerService: Ng4LoadingSpinnerService,\n        private storage: StorageService) { }\n\n  ngOnInit() {\n\n  }\n\n  public Ok(model: AdminUser) {\n\n     const self = this;\n\n     if (model === null) {\n      self.toastr.error('User model cannot be empty ');\n     }\n   console.log( model.Role);\n    this.account.CreateUser(model).subscribe(c => {\n\n      if (c.Succeeded)  {\n        self.toastr.success('Operation successful');\n      } else {\n        self.toastr.error('Operation failed ' + c.Message);\n      }\n     }, e => {\n      self.toastr.error('Error in operation ' + e);\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Agent Report</h5>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" [routerLink]=\\\"['/account']\\\"><i class=\\\"fa fa-plus\\\"></i> Add Admin User </a>\\n                      &nbsp;  <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                          &nbsp; <span>StartDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                          &nbsp; <span>EndDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                          &nbsp;\\n                          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearchCustomer(searchModel)\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\" >\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>First Name </th>\\n                              <th>Last Name</th>\\n                              <th>Gender</th>\\n                              <th>Address</th>\\n                              <th>UserName</th>\\n                              <th>Role</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.FirstName}} </td>\\n                              <td>{{item.LastName}} </td>\\n                              <td>{{item.Gender}} </td>\\n                              <td>{{item.Address}}</td>\\n                              <td>{{item.UserName}}</td>\\n                              <td>{{item.Role}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <!-- <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No User found</span>\\n                    </div> -->\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SequencePage } from '../shared/sequencepage';\r\nimport { User, SearchModel } from '../shared/model';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { StorageService } from '../service/storage.service';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { AccountService } from '../service/account.service';\r\n\r\n@Component({\r\n  selector: 'app-agent',\r\n  templateUrl: './agent.component.html',\r\n})\r\nexport class AgentComponent implements OnInit {\r\n\r\n  baseurl: string = location.protocol + '//' + location.host + '/';\r\n  public data: SequencePage<User>;\r\n  public response: User[] = new Array<User>();\r\n  public pageIndex = 1;\r\n  public pageSize = 100;\r\n  public pageLinks: number[] = [];\r\n  public hasPage: boolean;\r\n\r\n  public users: User[] = new Array<User>();\r\n  public searchModel: SearchModel = new SearchModel();\r\n  constructor(private router: Router,\r\n    private toastr: ToastrService, private storage: StorageService,\r\n    private spinnerService: Ng4LoadingSpinnerService, private service: AccountService) {\r\n\r\n  }\r\n  public reloadPage() {\r\n    document.location.reload();\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    const self = this;\r\n    this.LoadFirstPage();\r\n    // this.service.GetAdminUser().subscribe(c => {\r\n    //      self.users = c.Result;\r\n    // });\r\n  }\r\n\r\n\r\n    LoadFirstPage() {\r\n      const get = this.Get(0);\r\n      this.hasPage = this.HasNoPage();\r\n      return get;\r\n    }\r\n\r\n    LoadLastPage() {\r\n\r\n      if (this.data) {\r\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\r\n      }\r\n    }\r\n\r\n    HasNoPage(): boolean {\r\n      const result: boolean = this.data == null\r\n      || typeof this.data === 'undefined'\r\n      || this.data.Page.length === 0;\r\n\r\n      return result;\r\n    }\r\n// GetAdminUserSearch\r\n\r\npublic SearchCustomer(searchMod: SearchModel) {\r\n  const self = this;\r\n\r\n  self.service.GetAdminUserSearch(searchMod).subscribe(resp => {\r\n    const _page = resp.Result;\r\n    if (_page.PageSize === 0) {\r\n      // <-- debug stuff\r\n      self.pageLinks = [];\r\n    } else {\r\n      self.data = new SequencePage<User>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\r\n      self.pageLinks = self.data.AdjacentIndexes(2);\r\n      self.response = self.data.Page;\r\n    }\r\n    return self.response;\r\n  }, err => {\r\n    self.data = new SequencePage<User>([], 0);\r\n    self.pageLinks = self.data.AdjacentIndexes(2);\r\n    return self.response;\r\n  });\r\n  return self.response;\r\n}\r\n    public Get(pageIndex?: number): Array<User> {\r\n\r\n      const self = this;\r\n\r\n      self.service.GetAdminUserPaged(pageIndex, this.pageSize).subscribe(resp => {\r\n        const _page = resp.Result;\r\n\r\n        if (_page.PageSize === 0) {\r\n          // <-- debug stuff\r\n          self.pageLinks = [];\r\n        } else {\r\n          self.data = new SequencePage<User>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\r\n          self.pageLinks = self.data.AdjacentIndexes(2);\r\n          self.response = self.data.Page;\r\n        }\r\n        return self.response;\r\n      }, err => {\r\n        self.data = new SequencePage<User>([], 0);\r\n        self.pageLinks = self.data.AdjacentIndexes(2);\r\n        return self.response;\r\n      });\r\n      return self.response;\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Change Password </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-4\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>Password</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"changePassword.Password\\\"  class=\\\"form-control\\\">\\n            </div>\\n            <label>New Password</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" name=\\\"newpassword\\\"  [(ngModel)]=\\\"changePassword.NewPassword\\\" class=\\\"form-control\\\">\\n            </div>\\n            <label>Confirm Password</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"changePassword.ConfirmPassword\\\" class=\\\"form-control\\\">\\n            </div>\\n        </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-3\\\" (click)=\\\"Ok(changePassword)\\\" style=\\\"background-color: orange\\\">Update Password </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { PasswordChange } from '../shared/model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from '../service/storage.service';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { AccountService } from '../service/account.service';\r\nimport { isNull } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html',\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  baseurl: string = location.protocol + '//' + location.host + '/';\r\n  public changePassword: PasswordChange = new PasswordChange();\r\n\r\n  public password: string;\r\n  constructor(private router: Router,\r\n    private toastr: ToastrService, private storage: StorageService,\r\n    private spinnerService: Ng4LoadingSpinnerService, private service: AccountService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n   // this.toastr.success('Hello world!', 'Toastr fun!');\r\n  }\r\n\r\n   public Ok(model: PasswordChange) {\r\n\r\n    const self = this;\r\n\r\n    if (model ===  null || model === undefined) {\r\n      this.toastr.error('Password data cannot be empty');\r\n    }\r\n    if (model.NewPassword !== model.ConfirmPassword) {\r\n      this.toastr.error('New Password must be the same with confirm password');\r\n      }\r\n      if (model.Password !== '')  {\r\n        this.toastr.error('Password cannot be empty');\r\n        }\r\n    model.UserId = 0;\r\n\r\n    this.spinnerService.show();\r\n     self.service.ChangePasswordOk(model).subscribe(c => {\r\n\r\n      if (c.Succeeded) {\r\n\r\n        self.toastr.success('Operation successful');\r\n\r\n        self.changePassword = new PasswordChange();\r\n      } else {\r\n        self.toastr.error('Operation failed ' + c.Message);\r\n      }\r\n      self.changePassword = new PasswordChange();\r\n      self.spinnerService.hide();\r\n     }, e => {\r\n\r\n       console.log(e);\r\n\r\n      self.toastr.error('Operation failed ' + e);\r\n      self.spinnerService.hide();\r\n     });\r\n\r\n\r\n   }\r\n}\r\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n    <app-navigation></app-navigation>\\n    <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n    <app-topnav></app-topnav>\\n    <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n   </div>\\n       <div class=\\\"content content-custom\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h5 class=\\\"title\\\">User Report</h5>\\n                <hr>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n     <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                       <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Withdrawal </a> -->\\n                        <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                        <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <form class=\\\"form-inline justify-content-sm-end\\\">\\n                            <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                            &nbsp; <span>StartDate</span>\\n                            <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                            &nbsp; <span>EndDate</span>\\n                            <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                            &nbsp;\\n                            <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearcUsersData(searchModel)\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                    <table class=\\\"table table-bordered\\\">\\n                        <thead>\\n                            <tr class=\\\"h6\\\">\\n                                <th>SN</th>\\n                                <th>First Name </th>\\n                                <th>Last Name</th>\\n                                <th>Gender</th>\\n                                <th>Address</th>\\n                                <th>UserName</th>\\n                                <th>Entry Date </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                                <td>{{i+1}}</td>\\n                                <td>{{item.FirstName}} </td>\\n                                <td>{{item.LastName}} </td>\\n                                <td>{{item.Gender}} </td>\\n                                <td>{{item.Address}}</td>\\n                                <td>{{item.UserName}}</td>\\n                                <td>{{item.CreatedDate | date }}</td>\\n                            </tr>\\n\\n                        </tbody>\\n                    </table>\\n                    <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                        <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No User found</span>\\n                      </div>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                          <ul class=\\\"pagination\\\">\\n                            <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                            <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                              <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                                {{p + 1}}\\n                              </a>\\n                            </li>\\n                            <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n   </div>\\n   </div>\\n\\n\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { SequencePage } from \"../shared/sequencepage\";\r\nimport { User, SearchModel } from \"../shared/model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\r\nimport { StorageService } from \"../service/storage.service\";\r\nimport { AccountService } from \"../service/account.service\";\r\n\r\n@Component({\r\n  selector: \"app-forgotpass\",\r\n  templateUrl: \"./forgotpass.component.html\"\r\n})\r\nexport class ForgotPassComponent implements OnInit {\r\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\r\n  public data: SequencePage<User>;\r\n  public response: User[] = new Array<User>();\r\n  public pageIndex = 1;\r\n  public pageSize = 100;\r\n  public pageLinks: number[] = [];\r\n  public hasPage: boolean;\r\n\r\n  public searchModel: SearchModel = new SearchModel();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private storage: StorageService,\r\n    private spinnerService: Ng4LoadingSpinnerService,\r\n    private service: AccountService\r\n  ) {}\r\n\r\n  public reloadPage() {\r\n    document.location.reload();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.LoadFirstPage();\r\n  }\r\n\r\n  LoadFirstPage() {\r\n    const get = this.Get(0);\r\n    this.hasPage = this.HasNoPage();\r\n    return get;\r\n  }\r\n\r\n  LoadLastPage() {\r\n    if (this.data) {\r\n      return this.Get(Math.ceil(this.data.SequenceLength / this.pageSize) - 1);\r\n    }\r\n  }\r\n\r\n  HasNoPage(): boolean {\r\n    const result: boolean =\r\n      this.data == null ||\r\n      typeof this.data === \"undefined\" ||\r\n      this.data.Page.length === 0;\r\n\r\n    return result;\r\n  }\r\n\r\n  public Get(pageIndex?: number): Array<User> {\r\n    const self = this;\r\n\r\n    self.service.getUserList(pageIndex, this.pageSize).subscribe(\r\n      resp => {\r\n        const _page = resp.Result;\r\n\r\n        if (_page.PageSize === 0) {\r\n          // <-- debug stuff\r\n          self.pageLinks = [];\r\n        } else {\r\n          self.data = new SequencePage<User>(\r\n            _page.Page,\r\n            _page.SequenceLength,\r\n            _page.PageSize,\r\n            _page.PageIndex\r\n          );\r\n          self.pageLinks = self.data.AdjacentIndexes(2);\r\n          self.response = self.data.Page;\r\n        }\r\n        return self.response;\r\n      },\r\n      err => {\r\n        self.data = new SequencePage<User>([], 0);\r\n        self.pageLinks = self.data.AdjacentIndexes(2);\r\n        return self.response;\r\n      }\r\n    );\r\n    return self.response;\r\n  }\r\n\r\n  public SearcUsersData(searchMod: SearchModel) {\r\n    const self = this;\r\n\r\n    self.service.getUserAdminList(searchMod).subscribe(\r\n      resp => {\r\n        const _page = resp.Result;\r\n        if (_page.PageSize === 0) {\r\n          // <-- debug stuff\r\n          self.pageLinks = [];\r\n        } else {\r\n          self.data = new SequencePage<User>(\r\n            _page.Page,\r\n            _page.SequenceLength,\r\n            _page.PageSize,\r\n            _page.PageIndex\r\n          );\r\n          self.pageLinks = self.data.AdjacentIndexes(2);\r\n          self.response = self.data.Page;\r\n        }\r\n        return self.response;\r\n      },\r\n      err => {\r\n        self.data = new SequencePage<User>([], 0);\r\n        self.pageLinks = self.data.AdjacentIndexes(2);\r\n        return self.response;\r\n      }\r\n    );\r\n    return self.response;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"index-bg\\\">\\n  <div class=\\\"bg-overlay\\\">\\n    <div class=\\\"container container-index\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-body-custom\\\">\\n              <div class=\\\"logo-index\\\">\\n                <img src=\\\"../assets/img/eureka-logo.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"Image\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"card-body login-card-custom\\\">\\n              <form class=\\\"form\\\" method=\\\"\\\" action=\\\"\\\">\\n                <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-addon\\\">\\n                    <i class=\\\"now-ui-icons users_circle-08\\\"></i>\\n                  </span>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"login.UserName\\\" placeholder=\\\"UserName\\\"\\n                    required />\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-addon\\\">\\n                    <i class=\\\"now-ui-icons text_caps-small\\\"></i>\\n                  </span>\\n                  <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"Password\\\" [(ngModel)]=\\\"login.Password\\\" class=\\\"form-control\\\"\\n                    required />\\n                </div>\\n              </form>\\n            </div>\\n            <div class=\\\"card-footer text-center\\\">\\n              <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"onlogin(login)\\\" style=\\\"background-color: orange\\\">\\n                Login </a>\\n            </div>\\n            <div class=\\\"card-footer\\\" style=\\\"float: left;width: 100%\\\">\\n              <div style=\\\"float: left;\\\">\\n                <a href=\\\"javascript:;\\\" class=\\\"link footer-link\\\" style=\\\"color:blue;text-decoration: none\\\"> <b><i class=\\\"fa fa-user-plus\\\"></i>\\n                    Sign up</b></a>\\n              </div>\\n              <div style=\\\"float: right;\\\">\\n                <a href=\\\"javascript:;\\\" class=\\\"link footer-link\\\" style=\\\"color:blue;text-decoration: none\\\"><i class=\\\"fa fa-unlock-alt\\\"></i>\\n                  Forgot password\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Footer -->\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { UserLogin, Token } from \"../shared/model\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Constants } from \"../shared/Constants\";\nimport { AccountService } from \"../service/account.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  login: UserLogin = new UserLogin();\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private account: AccountService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private storage: StorageService\n  ) {}\n\n  ngOnInit() {}\n\n  public onlogin(login: UserLogin) {\n    this.spinnerService.show();\n    // this.loaderService.display(true);\n    const self = this;\n\n    this.account.getUserToken(login).subscribe(\n      resp => {\n        if (resp.Succeeded) {\n          const token = new Token();\n\n          token.token = resp.Result.token;\n          token.expiration = resp.Result.expiration;\n          token.user = resp.Result.user;\n\n          //// log into local storage\n          // self.storage.token = token;\n          // self.storage.user = token.user;\n          localStorage.setItem(\n            Constants.OAuthTokenKey,\n            JSON.stringify(token.token)\n          );\n          localStorage.setItem(Constants.UserKey, JSON.stringify(token.user));\n          // this.toastr.success('successfully sign in', 'success!');\n          // self.loaderService.display(false);\n          console.log(token.user.Role);\n          this.router.navigate([\"/dashboard\"]);\n          self.spinnerService.hide();\n        } else {\n          self.toastr.error(resp.Message, \"Error!\");\n          // this.loaderService.display(false);\n          self.spinnerService.hide();\n          this.router.navigate([\"/login\"]);\n        }\n      },\n      error => {\n        console.log(\"login error\");\n        this.toastr.error(\"Failed to login \" + error, \"Error!\");\n        this.spinnerService.hide();\n        this.router.navigate([\"/login\"]);\n      }\n    );\n  }\n\n  KeyPress($event) {\n    // If Enter was Pressed\n    if ($event.keyCode === 13) {\n      // this.SignUp();\n    }\n  }\n\n  public Redirect(role: string) {\n    if (role === Constants.Roles.Administrator) {\n      this.toastr.info(role);\n      this.router.navigate([\" \"]);\n    } else if (role === Constants.Roles.User) {\n      this.router.navigate([\"/login\"]);\n    }\n  }\n  public redirectTo() {\n    this.router.navigate([\"/forgotpass\"]);\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n    <app-navigation></app-navigation>\\n    <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n    <app-topnav></app-topnav>\\n    <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n   </div>\\n   <div class=\\\"content content-custom\\\">\\n    <div class=\\\"card \\\">\\n      <div class=\\\"card-header \\\">\\n          <h4 class=\\\"card-title\\\">User profile </h4>\\n      </div>\\n      <div class=\\\"card-body \\\">\\n        <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6\\\">\\n          <form method=\\\"#\\\" action=\\\"#\\\">\\n              <label>First Name</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"user.FirstName\\\"  class=\\\"form-control\\\">\\n              </div>\\n              <label>Last Name</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"LastName\\\"  [(ngModel)]=\\\"user.LastName\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Email</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"email\\\" name=\\\"EmailAddress\\\" [(ngModel)]=\\\"user.EmailAddress\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Address</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"Address\\\" [(ngModel)]=\\\"user.Address\\\" class=\\\"form-control\\\">\\n              </div>\\n              <label>Mobile</label>\\n              <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" name=\\\"Mobile\\\" [(ngModel)]=\\\"user.Mobile\\\" class=\\\"form-control\\\">\\n              </div>\\n          </form>\\n         </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"card-footer \\\">\\n          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-3\\\" (click)=\\\"Ok(user)\\\" style=\\\"background-color: orange\\\">Update Profile </a>\\n      </div>\\n  </div>\\n  </div>\\n\\n   </div>\\n   </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../shared/model';\r\nimport { SequencePage } from '../shared/sequencepage';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { AccountService } from '../service/account.service';\r\nimport { StorageService } from '../service/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n   baseurl: string = location.protocol + '//' + location.host + '/';\r\n\r\n   user: User = new User();\r\n   constructor(private router: Router,\r\n   private toastr: ToastrService, private storage: StorageService,\r\n   private spinnerService: Ng4LoadingSpinnerService, private service: AccountService) {\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n     const self = this;\r\n\r\n     self.service.getCurrentUser().subscribe(c => {\r\n     self.user.Address = c.Result.Address;\r\n     self.user.EmailAddress = c.Result.EmailAddress;\r\n     self.user.Mobile = c.Result.Mobile;\r\n     self.user.FirstName = c.Result.FirstName;\r\n     self.user.LastName = c.Result.LastName;\r\n     });\r\n  }\r\n\r\n   Ok(model: User) {\r\n\r\n     const self = this;\r\n\r\n    this.service.updateWebProfile(model).subscribe(c => {\r\n\r\n      if (c.Succeeded) {\r\n        self.toastr.success('Operation successful');\r\n      } else {\r\n        self.toastr.error('Operation failed');\r\n      }\r\n    });\r\n\r\n   }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n    <app-navigation></app-navigation>\\n    <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n    <app-topnav></app-topnav>\\n    <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n   </div>\\n       <div class=\\\"content content-custom\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h5 class=\\\"title\\\">User Report</h5>\\n                <hr>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n     <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                       <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Withdrawal </a> -->\\n                        <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                        <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <form class=\\\"form-inline justify-content-sm-end\\\">\\n                            <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                            &nbsp; <span>StartDate</span>\\n                            <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                            &nbsp; <span>EndDate</span>\\n                            <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                            &nbsp;\\n                            <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearcUsersData(searchModel)\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                    <table class=\\\"table table-bordered\\\">\\n                        <thead>\\n                            <tr class=\\\"h6\\\">\\n                                <th>SN</th>\\n                                <th>First Name </th>\\n                                <th>Last Name</th>\\n                                <th>Gender</th>\\n                                <th>Address</th>\\n                                <th>UserName</th>\\n                                <th>Entry Date </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                                <td>{{i+1}}</td>\\n                                <td>{{item.FirstName}} </td>\\n                                <td>{{item.LastName}} </td>\\n                                <td>{{item.Gender}} </td>\\n                                <td>{{item.Address}}</td>\\n                                <td>{{item.UserName}}</td>\\n                                <td>{{item.CreatedDate | date }}</td>\\n                            </tr>\\n\\n                        </tbody>\\n                    </table>\\n                    <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                        <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No User found</span>\\n                      </div>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                          <ul class=\\\"pagination\\\">\\n                            <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                            <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                              <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                                {{p + 1}}\\n                              </a>\\n                            </li>\\n                            <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                          </ul>\\n                        </div>\\n                      </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n   </div>\\n   </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SequencePage } from '../shared/sequencepage';\r\nimport { User, SearchModel } from '../shared/model';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { StorageService } from '../service/storage.service';\r\nimport { AccountService } from '../service/account.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  baseurl: string = location.protocol + '//' + location.host + '/';\r\n  public data: SequencePage<User>;\r\n  public response: User[] = new Array<User>();\r\n  public pageIndex = 1;\r\n  public pageSize = 100;\r\n  public pageLinks: number[] = [];\r\n  public hasPage: boolean;\r\n\r\n  public searchModel: SearchModel = new SearchModel();\r\n\r\n  constructor(private router: Router,\r\n    private toastr: ToastrService, private storage: StorageService,\r\n    private spinnerService: Ng4LoadingSpinnerService, private service: AccountService) {\r\n\r\n  }\r\n\r\n  public reloadPage() {\r\n    document.location.reload();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.LoadFirstPage();\r\n  }\r\n\r\n\r\n    LoadFirstPage() {\r\n      const get = this.Get(0);\r\n      this.hasPage = this.HasNoPage();\r\n      return get;\r\n    }\r\n\r\n    LoadLastPage() {\r\n\r\n      if (this.data) {\r\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\r\n      }\r\n    }\r\n\r\n    HasNoPage(): boolean {\r\n      const result: boolean = this.data == null\r\n      || typeof this.data === 'undefined'\r\n      || this.data.Page.length === 0;\r\n\r\n      return result;\r\n    }\r\n\r\n    public Get(pageIndex?: number): Array<User> {\r\n\r\n      const self = this;\r\n\r\n      self.service.getUserList(pageIndex, this.pageSize).subscribe(resp => {\r\n        const _page = resp.Result;\r\n\r\n        if (_page.PageSize === 0) {\r\n          // <-- debug stuff\r\n          self.pageLinks = [];\r\n        } else {\r\n          self.data = new SequencePage<User>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\r\n          self.pageLinks = self.data.AdjacentIndexes(2);\r\n          self.response = self.data.Page;\r\n        }\r\n        return self.response;\r\n      }, err => {\r\n        self.data = new SequencePage<User>([], 0);\r\n        self.pageLinks = self.data.AdjacentIndexes(2);\r\n        return self.response;\r\n      });\r\n      return self.response;\r\n    }\r\n\r\n    public SearcUsersData(searchMod: SearchModel) {\r\n\r\n      const self = this;\r\n\r\n      self.service.getUserAdminList(searchMod).subscribe(resp => {\r\n        const _page = resp.Result;\r\n        if (_page.PageSize === 0) {\r\n          // <-- debug stuff\r\n          self.pageLinks = [];\r\n        } else {\r\n          self.data = new SequencePage<User>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\r\n          self.pageLinks = self.data.AdjacentIndexes(2);\r\n          self.response = self.data.Page;\r\n        }\r\n        return self.response;\r\n      }, err => {\r\n        self.data = new SequencePage<User>([], 0);\r\n        self.pageLinks = self.data.AdjacentIndexes(2);\r\n        return self.response;\r\n      });\r\n      return self.response;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<router-outlet>\\n  <ng4-loading-spinner> </ng4-loading-spinner>\\n</router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'payajouxapp';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { AccountComponent } from \"./account/account.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { LoginComponent } from \"./account/login.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ToastrModule, ToastContainerModule } from \"ngx-toastr\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { Ng4LoadingSpinnerModule } from \"ng4-loading-spinner\";\nimport { NavigationComponent } from \"./shared/navigation/navigation.component\";\nimport { TopNavComponent } from \"./shared/navigation/topnav.component\";\nimport { CustomerComponent } from \"./customer/customer.component\";\nimport { DataService } from \"./service/data.service\";\nimport { AccountService } from \"./service/account.service\";\nimport { CustomerService } from \"./service/customer.service\";\nimport { ReportService } from \"./service/report.service\";\nimport { StorageService } from \"./service/storage.service\";\nimport { ActiveCustomerComponent } from \"./customer/activecustomer.component\";\nimport { InActiveCustomerComponent } from \"./customer/inactivecustomer.component\";\nimport { TransactionService } from \"./service/transaction.service\";\nimport { TransactionComponent } from \"./transaction/transaction.component\";\nimport { CreditTransactionComponent } from \"./transaction/credittransaction.component\";\nimport { DebitTransactionComponent } from \"./transaction/debittransaction.component\";\nimport { WithdrawalComponent } from \"./withdrawal/withdrawal.component\";\nimport { PaidWithdrawalComponent } from \"./withdrawal/paidwithdrawal.component\";\nimport { ApprovedWithdrawalComponent } from \"./withdrawal/approvedwithdrawal.component\";\nimport { WithdrawalService } from \"./service/withdrawal.service\";\nimport { UsersComponent } from \"./account/users.component\";\nimport { ProfileComponent } from \"./account/profile.component\";\nimport { AgentComponent } from \"./account/agent.component\";\nimport { ChangePasswordComponent } from \"./account/changepassword.component\";\nimport { CreateCustomerComponent } from \"./customer/createcustomer.component\";\nimport { CreateTransactionComponent } from \"./transaction/createtransaction.component\";\nimport { TransactionLogComponent } from \"./transaction/transactionlog.component\";\nimport { CreateWithdrawalComponent } from \"./withdrawal/createwithdrawal.component\";\nimport { WithdrawalAgentComponent } from \"./withdrawal/withdrawalagent.component\";\nimport { ViewCustomerComponent } from \"./customer/viewcustomer.component\";\nimport { UpdateCustomerComponent } from \"./customer/updatecustomer.component\";\nimport { SmsDebitComponent } from \"./feecharges/smsdebit.component\";\nimport { ForgotPassComponent } from \"./account/forgotpass.component\";\n// import {NgAutoCompleteModule} from 'ng-auto-complete';\n\nconst routes = [\n  { path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\" },\n  { path: \"dashboard\", component: DashboardComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"customer\", component: CustomerComponent },\n  { path: \"active-customer\", component: ActiveCustomerComponent },\n  { path: \"inactive-customer\", component: InActiveCustomerComponent },\n  { path: \"transaction\", component: TransactionComponent },\n  { path: \"credittransaction\", component: CreditTransactionComponent },\n  { path: \"debittransaction\", component: DebitTransactionComponent },\n  { path: \"withdrawal\", component: WithdrawalComponent },\n  { path: \"paidwithdrawal\", component: PaidWithdrawalComponent },\n  { path: \"approvedwithdrawal\", component: ApprovedWithdrawalComponent },\n  { path: \"users\", component: UsersComponent },\n  { path: \"profile\", component: ProfileComponent },\n  { path: \"agent\", component: AgentComponent },\n  { path: \"change-password\", component: ChangePasswordComponent },\n  { path: \"createcustomer\", component: CreateCustomerComponent },\n  { path: \"createtransaction\", component: CreateTransactionComponent },\n  { path: \"transactionlog\", component: TransactionLogComponent },\n  { path: \"createwithdrawal\", component: CreateWithdrawalComponent },\n  { path: \"account\", component: AccountComponent },\n  { path: \"withdrawalagent/:id\", component: WithdrawalAgentComponent },\n  { path: \"customer-view/:id\", component: ViewCustomerComponent },\n  { path: \"customer-update/:id\", component: UpdateCustomerComponent },\n  { path: \"smsdebit\", component: SmsDebitComponent },\n  { path: \"techdebit\", component: SmsDebitComponent },\n  { path: \"smspayment\", component: SmsDebitComponent },\n  { path: \"techpayment\", component: SmsDebitComponent },\n  { path: \"forgotpass\", component: ForgotPassComponent },\n  { path: \"**\", component: DashboardComponent }\n];\n\n//\n// customer-update\n//\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    LoginComponent,\n    DashboardComponent,\n    NavigationComponent,\n    TopNavComponent,\n    CustomerComponent,\n    ActiveCustomerComponent,\n    InActiveCustomerComponent,\n    TransactionComponent,\n    CreditTransactionComponent,\n    DebitTransactionComponent,\n    WithdrawalComponent,\n    PaidWithdrawalComponent,\n    ApprovedWithdrawalComponent,\n    UsersComponent,\n    AgentComponent,\n    ProfileComponent,\n    ChangePasswordComponent,\n    CreateCustomerComponent,\n    CreateTransactionComponent,\n    TransactionLogComponent,\n    CreateWithdrawalComponent,\n    WithdrawalAgentComponent,\n    ViewCustomerComponent,\n    UpdateCustomerComponent,\n    SmsDebitComponent,\n    ForgotPassComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: \"toast-top-right\",\n      preventDuplicates: true\n    }), // ToastrModule added\n    ToastContainerModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      enableTracing: false // for debburgin route ..\n      // onSameUrlNavigation: 'reload'\n    }),\n    Ng4LoadingSpinnerModule.forRoot()\n    // NgAutoCompleteModule\n  ],\n  exports: [RouterModule],\n  providers: [\n    DataService,\n    AccountService,\n    CustomerService,\n    ReportService,\n    StorageService,\n    TransactionService,\n    WithdrawalService\n  ],\n  bootstrap: [AppComponent]\n\n  // schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule {}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Active Customer List</h5>\\n              <p>The list shows all the   <code>active</code> customers\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                          &nbsp; <span>StartDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                          &nbsp; <span>EndDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                          &nbsp;\\n                          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>First Name</th>\\n                              <th>Last Name</th>\\n                              <th>Customer Code</th>\\n                              <th>Phone Number</th>\\n                              <th>User Name </th>\\n                              <th>Customer Balance </th>\\n\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of customers ; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.FirstName}}</td>\\n                              <td>{{item.LastName}}</td>\\n                              <td>{{item.CustomerCode}} </td>\\n                              <td>{{item.Mobile}}</td>\\n                              <td>{{item.UserName}}</td>\\n                              <td>₦{{item.CustomerBalance | number}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Customer found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus, SearchModel } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { CustomerService } from '../service/customer.service';\n\n@Component({\n  selector: 'app-activecustomer',\n  templateUrl: './activecustomer.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class ActiveCustomerComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  recordStatus: RecordStatus;\n  dashboard: DashboardModel = new DashboardModel();\n\n  public data: SequencePage<Customer>;\n  public customers: Customer[] = new Array<Customer>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  public searchModel: SearchModel = new SearchModel();\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private customer: CustomerService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  public reloadPage() {\n    document.location.reload();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0 ||  this.customers.length === 0 || this.customers.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<Customer> {\n      const self = this;\n\n      self.customer.getActiveCustomers (pageIndex, this.pageSize).subscribe(resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<Customer>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.customers = self.data.Page;\n        }\n        return self.customers;\n      }, err => {\n        self.data = new SequencePage<Customer>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.customers;\n      });\n      return self.customers;\n    }\n   public onUpdate(id: number) {\n    this.toastr.success(`Customer with id has been updated`);\n   }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Create Customer </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>First Name</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"customer.FirstName\\\"  class=\\\"form-control\\\">\\n            </div>\\n            <label>Middle Name</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"MiddleName\\\"  [(ngModel)]=\\\"customer.MiddleName\\\" class=\\\"form-control\\\">\\n            </div>\\n            <label>Email Address</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"email\\\" name=\\\"EmailAddress\\\" [(ngModel)]=\\\"customer.EmailAddress\\\" class=\\\"form-control\\\">\\n            </div>\\n            <label> Customer Code </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"CustomerCode\\\" [(ngModel)]=\\\"customer.CustomerCode\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" >\\n            </div>\\n            <label>Mobile</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"Mobile\\\" [(ngModel)]=\\\"customer.Mobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Username</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"UserId\\\" [(ngModel)]=\\\"customer.UserName\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Next of Kin Name </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"NokName\\\" [(ngModel)]=\\\"customer.NokName\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Next of Kin Mobile </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"NokMobile\\\" [(ngModel)]=\\\"customer.NokMobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n        </form>\\n       </div>\\n       <div class=\\\"col-md-6\\\">\\n            <label>Last Name</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"LastName\\\"  [(ngModel)]=\\\"customer.LastName\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <label>Gender</label>\\n            <select class=\\\"form-control form-control-sm\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.Gender\\\">\\n              <option selected=\\\"selected\\\" value=\\\"Male\\\">\\n                  Male\\n               </option>\\n                <option value=\\\"Female\\\">\\n                   Female\\n               </option>\\n            </select>\\n            <label> Picture </label> <br/>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"fileinput fileinput-new form-group\\\" data-provides=\\\"fileinput\\\">\\n                    <span class=\\\"btn btn-default btn-file\\\">\\n                        <span>Choose file</span>\\n                        <input type=\\\"hidden\\\">\\n                        <input  name=\\\"Picture\\\"  #file type=\\\"file\\\" multiple (change)=\\\"onFileChanged(file.files)\\\"  >\\n                    </span>\\n                    <span class=\\\"fileinput-filename\\\"></span>\\n                    <span class=\\\"fileinput-new\\\">No file chosen</span>\\n                </div>\\n            </div>\\n            <label> Signature </label> <br/>\\n            <div class=\\\"fileinput fileinput-new form-group\\\" data-provides=\\\"fileinput\\\">\\n              <span class=\\\"btn btn-default btn-file\\\">\\n                  <span>Choose file</span> <input type=\\\"hidden\\\">\\n                  <input  name=\\\"Signature\\\"  #sfile type=\\\"file\\\" multiple (change)=\\\"onsignatureFileChanged(sfile.files)\\\"  >\\n              </span>\\n              <span class=\\\"fileinput-filename\\\"></span>\\n              <span class=\\\"fileinput-new\\\">No file chosen</span>\\n          </div>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"file\\\" name=\\\"Signature\\\" [(ngModel)]=\\\"customer.CustomerCode\\\" class=\\\"form-control\\\"  >\\n            </div>\\n            <label>City </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"City\\\" [(ngModel)]=\\\"customer.City\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>State</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"State\\\" [(ngModel)]=\\\"customer.State\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <label>Address</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"Address\\\" [(ngModel)]=\\\"customer.Address\\\" class=\\\"form-control\\\" required>\\n            </div>\\n          </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"Ok(customer)\\\" style=\\\"background-color: orange\\\">Save Customer </a>\\n\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/customer']\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { CustomerService } from '../service/customer.service';\nimport { HttpRequest, HttpClient, HttpEventType, HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-createcustomer',\n  templateUrl: './createcustomer.component.html',\n})\nexport class CreateCustomerComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  customer: Customer = new Customer();\n\n  public formData: FormData = new FormData();\n  public uploadProgress: number;\n  public fileName: string;\n\n  public sformData: FormData = new FormData(); // signature\n  public suploadProgress: number; // signature\n  public sfileName: string; // signature\n\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n     private service: CustomerService, private http: HttpClient) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  // onsFileChanged(files: any) {\n  //   if (!files) {\n  //     this.toastr.error('Error, please check the file inputst');\n  //     return;\n  //   }\n  //   for (const file of files) {\n  //     this.sformData.append('signature', file);\n  //     this.sfileName = file.name;\n  //   }\n\n  // }\n\n  onsignatureFileChanged(files: any) {\n    if (!files) {\n      this.toastr.error('Error, please check the file inputst');\n      return;\n    }\n    for (const file of files) {\n      this.formData.append('signature', file);\n      this.fileName = file.name;\n    }\n  }\n\n  onFileChanged(files: any) {\n    if (!files) {\n      this.toastr.error('Error, please check the file inputst');\n      return;\n    }\n    for (const file of files) {\n      this.formData.append('picture', file);\n      this.fileName = file.name;\n    }\n  }\n\n  Ok(model: Customer) {\n    const self = this;\n\n     this.service.CreateCustomer(model).subscribe(c => {\n\n     if (c.Succeeded) {\n\n       // Picture upload\n      const req = new HttpRequest('POST', `api/v1/customer/image-upload/${c.Result.CustomerId}`, self.formData, {\n        reportProgress: true,\n      });\n\n      self.http.request(req).subscribe(event => {\n\n        self.formData = new FormData();\n\n        if (event.type === HttpEventType.UploadProgress) {\n          self.uploadProgress = Math.round(100 * event.loaded / event.total);\n          this.spinnerService.show();\n\n        } else if (event instanceof HttpResponse) {\n          console.log('Files uploaded!');\n        }\n        self.formData = new FormData();\n        this.spinnerService.hide();\n       // self.toastr.success('Operation successful');\n      });\n\n       self.toastr.success('Operation successful');\n       } else {\n         self.toastr.error('Operation failed ' + c.Message );\n      }\n      self.formData = new FormData();\n   });\n}\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">All Customer Report </h5>\\n              <p>The list shows all the customers either <code>active</code>  or <code>inactive</code>\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" [routerLink]=\\\"['/createcustomer']\\\"><i class=\\\"fa fa-plus\\\"></i> Add Customer </a>\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                          &nbsp; <span>StartDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                          &nbsp; <span>EndDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                          &nbsp;\\n                          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearchCustomer(searchModel)\\\" style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>First Name</th>\\n                              <th>Last Name</th>\\n                              <th>Customer Code</th>\\n                              <th>Phone Number</th>\\n                             <th>Account Balance </th>\\n                              <!-- <th>NOk Name </th>\\n                              <th>NOk Phone No </th> -->\\n                              <th>User Name </th>\\n                              <th>Is Active </th>\\n                              <th>Entry Date </th>\\n                              <th>Action </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of customers ; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.FirstName}}</td>\\n                              <td>{{item.LastName}}</td>\\n                              <td>{{item.CustomerCode}} </td>\\n                              <td>{{item.Mobile}}</td>\\n                              <td>₦{{item.CustomerBalance | number}}</td>\\n                              <!-- <td>{{item.NokName}}</td>\\n                              <td>{{item.NokMobile}}</td> -->\\n                              <td>{{item.UserName}}</td>\\n                              <td>{{!item.Status ? 'InActive': 'Active'}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                                  <td class=\\\"td-actions text-left\\\">\\n                                      <a href=\\\"javascript:;\\\"  *ngIf=\\\"roleName == 'Merchant Admin'\\\" class=\\\"btn btn-sm mb-3\\\" (click)=\\\"ResetBalance(item.CustomerId)\\\" style=\\\"background-color:orange\\\">Reset bal </a> &nbsp;\\n                                      <a href=\\\"javascript:;\\\"   class=\\\"btn btn-sm mb-3\\\" (click)=\\\"GetCustomerView(item.CustomerId)\\\" style=\\\"background-color:\\t#b2beb5\\\">View  </a> &nbsp;\\n                                      <a href=\\\"javascript:;\\\"   class=\\\"btn btn-sm mb-3\\\" (click)=\\\"GetCustomerUpdate(item.CustomerId)\\\" style=\\\"background-color:\\t#0000ff\\\">Update </a> &nbsp;\\n                                      <!-- <button type=\\\"button\\\" (click)=\\\"onUpdate(item.CustomerId)\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-info btn-simple btn-icon btn-sm\\\" data-original-title=\\\"\\\" title=\\\"\\\">\\n                                          <i class=\\\"now-ui-icons users_single-02\\\"></i>\\n                                      </button>\\n                                      <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-simple btn-icon btn-sm\\\" data-original-title=\\\"\\\" title=\\\"\\\">\\n                                          <i class=\\\"now-ui-icons ui-2_settings-90\\\"></i>\\n                                      </button>\\n                                      <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-simple btn-icon btn-sm\\\" data-original-title=\\\"\\\" title=\\\"\\\">\\n                                          <i class=\\\"now-ui-icons ui-1_simple-remove\\\"></i>\\n                                      </button> -->\\n                                  </td>\\n                                  <!-- <i><a ><i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px\\\"></i> </a></i>&nbsp; -->\\n                                  <!-- <i><a ><i class=\\\"fa fa-edit\\\" style=\\\"font-size:18px\\\"></i> </a></i>&nbsp; -->\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <!-- <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Customer found</span>\\n                    </div> -->\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Constants } from \"../shared/Constants\";\nimport * as $ from \"jquery\";\nimport { ReportService } from \"../service/report.service\";\nimport {\n  Dashboard,\n  DashboardModel,\n  Customer,\n  RecordStatus,\n  SearchModel\n} from \"../shared/model\";\nimport { Observable } from \"rxjs\";\nimport { SequencePage } from \"../shared/sequencepage\";\nimport { CustomerService } from \"../service/customer.service\";\n\n@Component({\n  selector: \"app-customer\",\n  templateUrl: \"./customer.component.html\"\n  // styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n  recordStatus: RecordStatus;\n  dashboard: DashboardModel = new DashboardModel();\n\n  public data: SequencePage<Customer>;\n  public customers: Customer[] = new Array<Customer>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n  public roleName: string;\n\n  public customer: Customer;\n  public searchModel: SearchModel = new SearchModel();\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private service: CustomerService\n  ) {}\n\n  public reloadPage() {\n    document.location.reload();\n  }\n\n  ngOnInit() {\n    this.roleName = this.storage.GetUserInfo().Role;\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {}\n  LoadFirstPage() {\n    const get = this.Get(0);\n    this.hasPage = this.HasNoPage();\n    return get;\n  }\n\n  LoadLastPage() {\n    if (this.data) {\n      return this.Get(Math.ceil(this.data.SequenceLength / this.pageSize) - 1);\n    }\n  }\n\n  HasNoPage(): boolean {\n    const result: boolean =\n      this.data == null ||\n      typeof this.data === \"undefined\" ||\n      this.data.Page.length === 0;\n\n    return result;\n  }\n\n  public SearchCustomer(searchMod: SearchModel) {\n    const self = this;\n\n    self.service.getCustomerSeach(searchMod).subscribe(\n      resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<Customer>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.customers = self.data.Page;\n        }\n        return self.customers;\n      },\n      err => {\n        self.data = new SequencePage<Customer>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.customers;\n      }\n    );\n    return self.customers;\n  }\n  public Get(pageIndex?: number): Array<Customer> {\n    const self = this;\n    this.searchModel.pageSize = this.pageSize;\n    this.searchModel.pageIndex = pageIndex;\n\n    self.service.getCustomerSeach(this.searchModel).subscribe(\n      resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<Customer>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.customers = self.data.Page;\n        }\n        return self.customers;\n      },\n      err => {\n        self.data = new SequencePage<Customer>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.customers;\n      }\n    );\n    return self.customers;\n  }\n\n  public ResetBalance(id: number) {\n    const self = this;\n    if (!confirm(\"Are you sure\")) {\n      self.toastr.success(\n        \"Customer balance reset operation cancelled successfully\",\n        \"Success\"\n      );\n      return;\n    }\n    this.service.resetCustomerBalance(id).subscribe(c => {\n      if (c.Succeeded) {\n        self.toastr.success(\"Operation Succesful\", \"Success\");\n        this.LoadFirstPage();\n      } else {\n        self.toastr.error(c.Message, \"Error\");\n      }\n    });\n  }\n  public onUpdate(id: number) {\n    this.toastr.success(`Customer with id has been updated`);\n  }\n\n  public GetCustomerView(id: number) {\n    this.router.navigate([\"/customer-view\", id]);\n  }\n  public GetCustomerUpdate(id: number) {\n    this.router.navigate([\"/customer-update\", id]);\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">In Active Customer List</h5>\\n              <p>The list shows all the   <code>inactive</code> customers\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered\\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>First Name</th>\\n                              <th>Last Name</th>\\n                              <th>Customer Code</th>\\n                              <th>Phone Number</th>\\n                              <th>User Name </th>\\n                              <th>Customer Balance </th>\\n\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of customers ; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.FirstName}}</td>\\n                              <td>{{item.LastName}}</td>\\n                              <td>{{item.CustomerCode}} </td>\\n                              <td>{{item.Mobile}}</td>\\n                              <td>{{item.UserName}}</td>\\n                              <td>₦{{item.CustomerBalance | number}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                          </tr>\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Customer found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li><a href=\\\"javascript:void(0)\\\" style=\\\"font-size:18px;background-color:darkblue\\\" (click)=\\\"LoadFirstPage()\\\">&laquo;</a></li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"LoadLastPage()\\\" style=\\\"font-size:18px;background-color:darkblue\\\">&raquo;</a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { CustomerService } from '../service/customer.service';\n\n@Component({\n  selector: 'app-inactivecustomer',\n  templateUrl: './inactivecustomer.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class InActiveCustomerComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  recordStatus: RecordStatus;\n  dashboard: DashboardModel = new DashboardModel();\n\n  public data: SequencePage<Customer>;\n  public customers: Customer[] = new Array<Customer>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private customer: CustomerService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0 || this.customers.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<Customer> {\n      const self = this;\n\n      self.customer.getInActiveCustomers (pageIndex, this.pageSize).subscribe(resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<Customer>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.customers = self.data.Page;\n        }\n        return self.customers;\n      }, err => {\n        self.data = new SequencePage<Customer>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.customers;\n      });\n      return self.customers;\n    }\n   public onUpdate(id: number) {\n    this.toastr.success(`Customer with id has been updated`);\n   }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Update Customer </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>First Name</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"FirstName\\\" [(ngModel)]=\\\"customer.FirstName\\\"  class=\\\"form-control\\\">\\n            </div>\\n            <label>Middle Name</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"MiddleName\\\"  [(ngModel)]=\\\"customer.MiddleName\\\" class=\\\"form-control\\\">\\n            </div>\\n            <label>Email Address</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"email\\\" name=\\\"EmailAddress\\\" [(ngModel)]=\\\"customer.EmailAddress\\\" class=\\\"form-control\\\">\\n            </div>\\n\\n            <label>Mobile</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"Mobile\\\" [(ngModel)]=\\\"customer.Mobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Username</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"UserId\\\" [(ngModel)]=\\\"customer.UserName\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Next of Kin Name </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"NokName\\\" [(ngModel)]=\\\"customer.NokName\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n            <label>Next of Kin Mobile </label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"NokMobile\\\" [(ngModel)]=\\\"customer.NokMobile\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\n            </div>\\n        </form>\\n       </div>\\n       <div class=\\\"col-md-6\\\">\\n         <form method=\\\"#\\\" action=\\\"#\\\">\\r\\n           <label>Last Name</label>\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"LastName\\\" [(ngModel)]=\\\"customer.LastName\\\" class=\\\"form-control\\\" required>\\r\\n           </div>\\r\\n           <label>Gender</label>\\r\\n           <select class=\\\"form-control form-control-sm\\\" name=\\\"gender\\\" [(ngModel)]=\\\"customer.Gender\\\">\\r\\n             <option selected=\\\"selected\\\" value=\\\"Male\\\">\\r\\n               Male\\r\\n             </option>\\r\\n             <option value=\\\"Female\\\">\\r\\n               Female\\r\\n             </option>\\r\\n           </select>\\r\\n           <label>Customer Code </label>\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"CustomerCode\\\" [(ngModel)]=\\\"customer.CustomerCode\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\r\\n           </div>\\r\\n           <label> Picture </label> <br />\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <div class=\\\"fileinput fileinput-new form-group\\\" data-provides=\\\"fileinput\\\">\\r\\n               <span class=\\\"btn btn-default btn-file\\\">\\r\\n                 <span>Choose file</span>\\r\\n                 <input type=\\\"hidden\\\">\\r\\n                 <input name=\\\"Picture\\\" #file type=\\\"file\\\" multiple (change)=\\\"onFileChanged(file.files)\\\">\\r\\n               </span>\\r\\n               <span class=\\\"fileinput-filename\\\"></span>\\r\\n               <span class=\\\"fileinput-new\\\">No file chosen</span>\\r\\n             </div>\\r\\n           </div>\\r\\n           <label> Signature </label> <br />\\r\\n           <div class=\\\"fileinput fileinput-new form-group\\\" data-provides=\\\"fileinput\\\">\\r\\n             <span class=\\\"btn btn-default btn-file\\\">\\r\\n               <span>Choose file</span> <input type=\\\"hidden\\\">\\r\\n               <input name=\\\"Signature\\\" #sfile type=\\\"file\\\" multiple (change)=\\\"onsignatureFileChanged(sfile.files)\\\">\\r\\n             </span>\\r\\n             <span class=\\\"fileinput-filename\\\"></span>\\r\\n             <span class=\\\"fileinput-new\\\">No file chosen</span>\\r\\n           </div>\\r\\n           <label>City </label>\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"City\\\" [(ngModel)]=\\\"customer.City\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\">\\r\\n           </div>\\r\\n           <label>State</label>\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"State\\\" [(ngModel)]=\\\"customer.State\\\" class=\\\"form-control\\\" required>\\r\\n           </div>\\r\\n           <label>Address</label>\\r\\n           <div class=\\\"form-group\\\">\\r\\n             <input type=\\\"text\\\" name=\\\"Address\\\" [(ngModel)]=\\\"customer.Address\\\" class=\\\"form-control\\\" required>\\r\\n           </div>\\r\\n         </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"Update()\\\" style=\\\"background-color: orange\\\">Update Customer </a>\\n\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/customer']\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit} from '@angular/core';\nimport { Router , ActivatedRoute } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { DashboardModel, Customer, RecordStatus } from '../shared/model';\nimport { SequencePage } from '../shared/sequencepage';\nimport { CustomerService } from '../service/customer.service';\nimport { HttpEventType, HttpRequest, HttpClient, HttpResponse } from '@angular/common/http';\r\n\n@Component({\n  selector: 'app-updatecustomer',\n  templateUrl: './updatecustomer.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit  {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  recordStatus: RecordStatus;\n  dashboard: DashboardModel = new DashboardModel();\n\n  public data: SequencePage<Customer>;\n  public customers: Customer[] = new Array<Customer>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n public customerId: number;\n public customer: Customer = new Customer();\n\n\n  public formData: FormData = new FormData();\n  public uploadProgress: number;\n  public fileName: string;\n\n  public sformData: FormData = new FormData(); // signature\n  public suploadProgress: number; // signature\n  public sfileName: string; // signature\n\n\n  constructor(private router: Router, private route: ActivatedRoute,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private service: CustomerService, private http: HttpClient) {\n      const cid = this.route.snapshot.paramMap.get('id');\n\n      if (cid !== null) {\n        this.customerId = Number(cid);\n  }\n}\n\n ngOnInit() {\n\n  const self = this;\n  this.service.GetCustomer(this.customerId).subscribe(c => {\n     if (c.Succeeded) {\n       self.customer = c.Result;\n     } else {\n       self.toastr.error(c.Message, 'Error ');\n     }\n  }, e => {\n   self.toastr.error('Operation failed ' + e , 'Error' );\n  });\n }\n\n  onsignatureFileChanged(files: any) {\n    if (!files) {\n      this.toastr.error('Error, please check the file inputst');\n      return;\n    }\n    for (const file of files) {\n      this.formData.append('signature', file);\n      this.fileName = file.name;\n    }\n  }\n\n  onFileChanged(files: any) {\n    if (!files) {\n      this.toastr.error('Error, please check the file inputst');\n      return;\n    }\n    for (const file of files) {\n      this.formData.append('picture', file);\n      this.fileName = file.name;\n    }\n  }\npublic Update() {\n\n   const self = this;\n   this.service.UpdateCustomer(this.customer).subscribe(c => {\n\n     if (c.Succeeded) {\n       // Picture upload\n       const req = new HttpRequest('POST', `api/v1/customer/image-upload/${c.Result.CustomerId}`, self.formData, {\n         reportProgress: true,\n       });\n\n       self.http.request(req).subscribe(event => {\n\n         self.formData = new FormData();\n\n         if (event.type === HttpEventType.UploadProgress) {\n           self.uploadProgress = Math.round(100 * event.loaded / event.total);\n           this.spinnerService.show();\n\n         } else if (event instanceof HttpResponse) {\n           console.log('Files uploaded!');\n         }\n         self.formData = new FormData();\n         this.spinnerService.hide();\n         // self.toastr.success('Operation successful');\n       });\n\n       self.toastr.success('Operation successful');\n     } else {\n       self.toastr.error(c.Message, 'Error');\n     }\n     self.formData = new FormData();\n   }, e => {\n    self.toastr.error('Operation failed' +  e, 'Error');\n   });\n\n}\n\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">View Customer </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>First Name</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.FirstName }}\\n            </div>\\n            <label>Middle Name</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.MiddleName }}\\n            </div>\\n            <label>Email Address</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.EmailAddress }}\\n            </div>\\n\\n            <label>Mobile</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.Mobile }}\\n            </div>\\n            <label>Username</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.UserName }}\\n            </div>\\n            <label>Customer Code </label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.CustomerCode }}\\n            </div>\\n            <label>Next of Kin Name </label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.NokName }}\\n            </div>\\n            <label>Next of Kin Mobile </label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.NokMobile }}\\n            </div>\\n            <label>Entry Date </label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.CreatedDate | date }}\\n            </div>\\n        </form>\\n       </div>\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>Last Name</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.LastName }}\\n            </div>\\n            <label>Gender</label>\\n            <div class=\\\"form-group\\\">\\n            {{ customer.Gender }}\\n            </div>\\n            <label>Customer Code</label>\\n            <div class=\\\"form-group\\\">\\n            {{ customer.CustomerCode }}\\n          </div>\\n            <label>City </label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.City }}\\n            </div>\\n            <label>State</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.State }}\\n            </div>\\n            <label>Address</label>\\n            <div class=\\\"form-group\\\">\\n              {{ customer.Address }}\\n            </div>\\n            <label>Current Balance</label>\\n            <div class=\\\"form-group\\\">\\n                ₦{{ customer.CustomerBalance | number }}\\n            </div>\\n            <label>Signature</label>\\n            <div class=\\\"form-group\\\">\\n              <img src=\\\"{{ customer.SignaturePath }}\\\" alt=\\\"Signature\\\" width=\\\"100px\\\" height=\\\"80px\\\">\\n            </div>\\n            <label>Picture</label>\\n            <div class=\\\"form-group\\\">\\n              <img src=\\\"{{ customer.PicturePath }}\\\" alt=\\\"picture\\\" width=\\\"100px\\\" height=\\\"80px\\\">\\n            </div>\\n        </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/customer-update',customer.CustomerId]\\\"  style=\\\"background-color: orange\\\">Edit Customer </a>\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/customer']\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router , ActivatedRoute } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { CustomerService } from '../service/customer.service';\n\n@Component({\n  selector: 'app-viewcustomer',\n  templateUrl: './viewcustomer.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class ViewCustomerComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  recordStatus: RecordStatus;\n  dashboard: DashboardModel = new DashboardModel();\n\n  public data: SequencePage<Customer>;\n  public customers: Customer[] = new Array<Customer>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n  public customer: Customer = new Customer();\n\n  constructor(private router: Router, private route: ActivatedRoute,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: CustomerService) {\n      const self = this;\n      const cid = this.route.snapshot.paramMap.get('id');\n\n      if (cid !== null) {\n\n    this.service.GetCustomer(Number(cid)).subscribe(c => {\n     if (c.Succeeded) {\n       self.customer = c.Result;\n     } else {\n       self.toastr.error(c.Message, 'Error ');\n     }\n  }, e => {\n   self.toastr.error('Operation failed ' + e , 'Error' );\n  });\n}\n\n  }\n\n  ngOnInit() {\n\n\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n\n   public onUpdate(id: number) {\n    this.toastr.success(`Customer with id has been updated`);\n   }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"min-height: 800px\\\" >\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n     <!-- <canvas id=\\\"bigDashboardChart\\\"></canvas> -->\\n </div>\\n     <!-- Piechart and Line Chart -->\\n     <div class=\\\"content content-custom\\\" >\\n         <div class=\\\"row\\\">\\n             <div class=\\\"col-md-3\\\">\\n                 <div class=\\\"card\\\">\\n                     <div class=\\\"card-body card-body-custom\\\">\\n                         <div class=\\\"text-center\\\">\\n                             <div class=\\\"piechart\\\" data-percent=\\\"40\\\">\\n                                 <!-- <span class=\\\"percent\\\">40%</span> -->\\n                                 <i class=\\\"fa fa-handshake-o\\\" aria-hidden=\\\"true\\\"></i>\\n                             <canvas height=\\\"150\\\" width=\\\"150\\\" style=\\\"height: 60px; width: 60px;\\\"></canvas></div>\\n\\n                            <span style=\\\"text-align: center\\\">\\n                              <h6 style=\\\"color: blue\\\">Total Merchant Balance <br/> <b> ₦{{dashboard.TotalMerchantBalance | number}}</b> </h6>\\n                              <h6 style=\\\"color: orange\\\">Daily Debit Balance <br/> <b> ₦{{dashboard.TotalDailyDebit | number}}</b> </h6>\\n                            </span>\\n                         </div>\\n                     </div>\\n                 </div>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n                 <div class=\\\"card\\\">\\n                     <div class=\\\"card-body card-body-custom\\\">\\n                         <div class=\\\"text-left\\\">\\n                             <div class=\\\"piechart\\\" data-percent=\\\"59\\\">\\n                                 <!-- <span class=\\\"percent\\\">59%</span> -->\\n                             <canvas height=\\\"150\\\" width=\\\"150\\\" style=\\\"height: 60px; width: 60px;\\\"></canvas></div>\\n                            <span style=\\\"text-align: center\\\">\\n                               <h6 style=\\\"color: blue\\\">Daily Credit Balance  <br/> <b>  ₦{{dashboard.TotalDailyCredit  | number }}</b> </h6>\\n                               <h6 style=\\\"color: orange\\\">Weekly Debit Balance  <br/> <b> ₦{{dashboard.TotalWeeklyDebit  | number }} </b> </h6>\\n                            </span>\\n                         </div>\\n                     </div>\\n                 </div>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n                 <div class=\\\"card\\\">\\n                     <div class=\\\"card-body card-body-custom\\\">\\n                         <div class=\\\"text-left\\\">\\n                             <div class=\\\"piechart\\\" data-percent=\\\"90\\\">\\n                                 <!-- <span class=\\\"percent\\\">90%</span> -->\\n                             <canvas height=\\\"150\\\" width=\\\"150\\\" style=\\\"height: 60px; width: 60px;\\\"></canvas></div>\\n                            <span style=\\\"text-align: center\\\">\\n                               <h6 style=\\\"color: blue\\\">Weekly Credit Balance <br/> <b>  ₦{{dashboard.TotalWeeklyCredit | number }} </b> </h6>\\n                               <h6 style=\\\"color: orange\\\">Monthly Credit Balance <br/> <b> ₦{{dashboard.TotalMonthlyCredit | number}} </b></h6>\\n                            </span>\\n                         </div>\\n                     </div>\\n                 </div>\\n             </div>\\n             <div class=\\\"col-md-3\\\">\\n                 <div class=\\\"card\\\">\\n                     <div class=\\\"card-body card-body-custom\\\">\\n                         <div class=\\\"text-left\\\">\\n                             <div class=\\\"piechart\\\" data-percent=\\\"32\\\">\\n                                 <!-- <span class=\\\"percent\\\">32%</span> -->\\n                             <canvas height=\\\"150\\\" width=\\\"150\\\" style=\\\"height: 60px; width: 60px;\\\"></canvas></div>\\n                            <span style=\\\"text-align: center\\\">\\n                              <h6 style=\\\"color: blue;\\\">Total Active Customer <br/> <b> {{dashboard.TotalActiveCustomers | number }} </b> </h6>\\n                              <h6 style=\\\"color: orange\\\">Total Customer Today <br/> <b> {{dashboard.TotalCustomerToday | number }} </b> </h6>\\n                            </span>\\n                         </div>\\n                     </div>\\n                 </div>\\n             </div>\\n         </div>\\n\\n         <div class=\\\"row\\\"   >\\n          <div class=\\\"col-md-6\\\" >\\n              <div class=\\\"card\\\" >\\n                  <div class=\\\"card-header\\\">\\n                      <h5 class=\\\"title\\\">Last 10 Transactions</h5>\\n                  </div>\\n                  <div class=\\\"card-body card-body-custom\\\"  style=\\\"overflow: scroll\\\" >\\n                      <table class=\\\"table table-bordered \\\" >\\n                          <thead>\\n                              <tr class=\\\"h6\\\">\\n                                  <th class=\\\"text-center\\\">Customer Code</th>\\n                                  <th class=\\\"text-center\\\">Transaction No</th>\\n                                  <th class=\\\"text-center\\\">Transaction Type</th>\\n                                  <th class=\\\"text-center\\\">Amount</th>\\n                                  <th class=\\\"text-center\\\">Transaction Date</th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor=\\\"let item of dashboard.LastTenTransaction;let i=index\\\" style=\\\"font-size: 12px\\\">\\n                                  <td class=\\\"text-center\\\">{{item.Customer.FirstName}} {{item.Customer.LastName}} </td>\\n                                  <td class=\\\"text-center\\\">{{item.TransactionNo}}</td>\\n                                  <td class=\\\"text-center\\\">{{item.TransactionType}}</td>\\n                                  <td class=\\\"text-center\\\">₦{{item.Amount}}</td>\\n                                  <td class=\\\"text-center\\\">{{item.CreatedDate | date}}</td>\\n                              </tr>\\n                          </tbody>\\n                      </table>\\n                  </div>\\n              </div>\\n\\n          </div>\\n          <div class=\\\"col-md-6\\\" >\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                  <h5 class=\\\"title\\\">Last 10 withdrawal</h5>\\n              </div>\\n              <div class=\\\"card-body card-body-custom\\\" style=\\\"overflow: scroll\\\" >\\n                  <table class=\\\"table table-bordered \\\" >\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th class=\\\"text-center\\\">Customer Name</th>\\n                              <th class=\\\"text-center\\\">Amount</th>\\n                              <th class=\\\"text-center\\\">Withdrawal Status</th>\\n                              <th class=\\\"text-center\\\">Entry Date</th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr style=\\\"font-size: 12px\\\" *ngFor=\\\"let item of dashboard.LastTenWithdrawal;let i=index\\\">\\n                              <td class=\\\"text-center\\\">{{ item.Customer.LastName }} {{item.Customer.FirstName}}</td>\\n                              <td class=\\\"text-center\\\">₦{{item.Amount }}</td>\\n                              <td class=\\\"text-center\\\">{{GetWithdrawalStatus(item.WithdrawalStatus)}}</td>\\n                              <td class=\\\"text-center\\\">{{item.CreatedDate | date}} </td>\\n                          </tr>\\n                      </tbody>\\n                  </table>\\n              </div>\\n          </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Constants } from \"../shared/Constants\";\nimport * as $ from \"jquery\";\nimport { ReportService } from \"../service/report.service\";\nimport { Dashboard, DashboardModel } from \"../shared/model\";\nimport { HttpRequest } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n\n  dashboard: DashboardModel = new DashboardModel();\n\n  constructor(\n    private request: HttpRequest<any>,\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private report: ReportService\n  ) {\n    // , @Inject(DOCUMENT) private document: any\n  }\n\n  ngAfterViewInit(): void {}\n\n  ngOnInit() {\n    try {\n      this.spinnerService.show();\n      const self = this;\n      // const token = this.storage.Token;\n      const _token = localStorage.getItem(Constants.OAuthTokenKey);\n\n      if (_token != null) {\n        self.GetDashboard();\n        this.router.navigate([\"\"]);\n      } else {\n        this.router.navigate([\"/login\"]);\n      }\n      this.spinnerService.hide();\n    } catch (e) {\n      this.spinnerService.hide();\n      console.log(this.baseurl + \"#/login\");\n      document.location.href = this.baseurl + \"#/login\";\n      this.router.navigate([\"/login\"]);\n    }\n  }\n\n  public GetDashboard() {\n    const self = this;\n    this.report.GetDashboard().subscribe(c => {\n      self.dashboard = c.Result;\n    });\n  }\n\n  public GetWithdrawalStatus(status: number): string {\n    if (status === 0) {\n      return \"Pending\";\n    } else if (status === 1) {\n      return \"Approved\";\n    } else if (status === 2) {\n      return \"Paid\";\n    }\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\" data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n    <app-topnav></app-topnav>\\n    <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n    </div>\\n    <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\">Sms Notification</h5>\\n          <!-- <p>The list shows all the transaction either <code>credit</code>  or <code>debit</code>\\n          </p>-->\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-3\\\">\\n              <span style=\\\"color: orange\\\">\\n                <h5> Total Sms Count: {{smsmodel.NotifyCount}} </h5>\\n              </span> &nbsp;\\n            </div>\\n            <div class=\\\"col-sm-3\\\">\\n              <span style=\\\"color: orange\\\">\\n                <h5>Total Sms Cost: ₦{{smsmodel.SmsCost}} </h5>\\n              </span> &nbsp;\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <form class=\\\"form-inline justify-content-sm-end\\\">\\n                <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\"\\n                  type=\\\"text\\\">\\n\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr class=\\\"h6\\\">\\n                  <th>SN</th>\\n                  <th>Customer Name</th>\\n                  <th>Sender Name</th>\\n                  <th>Message</th>\\n                  <th>Notification Date</th>\\n                  <th>Total Message Sent</th>\\n                  <th>Total Cost</th>\\n                  <!-- <th>Is Paid</th> -->\\n                  <th>Recipient </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of smsmodel.Notifications; let i=index \\\">\\n                  <td>{{i+1}}</td>\\n                  <td>{{item.CustomerName}}</td>\\n                  <td>{{item.Sender}}</td>\\n                  <td>{{item.Message}} </td>\\n                  <td>{{item.CreatedDate | date}}</td>\\n                  <td>{{item.TotalMessageSent}}</td>\\n                  <td>₦{{item.Cost}}</td>\\n                  <!-- <td>{{item.IsPaid}}</td> -->\\n                  <td>{{item.Recipient }}</td>\\n                </tr>\\n\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Constants } from \"../shared/Constants\";\nimport * as $ from \"jquery\";\nimport { ReportService } from \"../service/report.service\";\nimport {\n  Dashboard,\n  DashboardModel,\n  Customer,\n  RecordStatus,\n  TransactionResponse,\n  SmsNotificationModel\n} from \"../shared/model\";\nimport { Observable } from \"rxjs\";\nimport { SequencePage } from \"../shared/sequencepage\";\nimport { TransactionService } from \"../service/transaction.service\";\n\n@Component({\n  selector: \"app-smsdebit\",\n  templateUrl: \"./smsdebit.component.html\"\n  // styleUrls: ['./customer.component.css']\n})\nexport class SmsDebitComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n  public data: SequencePage<TransactionResponse>;\n  public transactions: TransactionResponse[] = new Array<TransactionResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  public smsmodel: SmsNotificationModel = new SmsNotificationModel();\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private service: TransactionService,\n    private report: ReportService\n  ) {}\n\n  ngOnInit() {\n    this.GetSmsNotification();\n    this.LoadFirstPage();\n  }\n\n  public GetStatus(status: RecordStatus) {}\n  LoadFirstPage() {\n    const get = this.Get(0);\n    this.hasPage = this.HasNoPage();\n    return get;\n  }\n\n  public LoadLastPage() {\n    if (this.data) {\n      return this.Get(Math.ceil(this.data.SequenceLength / this.pageSize) - 1);\n    }\n  }\n\n  public HasNoPage(): boolean {\n    const result: boolean =\n      this.data == null ||\n      typeof this.data === \"undefined\" ||\n      this.data.Page.length === 0;\n\n    return result;\n  }\n\n  public Get(pageIndex?: number): Array<TransactionResponse> {\n    const self = this;\n\n    self.service.getTransaction(pageIndex, this.pageSize).subscribe(\n      resp => {\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n        return self.transactions;\n      },\n      err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      }\n    );\n    return self.transactions;\n  }\n\n  public GetSmsNotification() {\n    const self = this;\n\n    self.report.GetSmsNotification().subscribe(c => {\n      self.smsmodel = c.Result;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { User, Token, UserLogin, Operation, PasswordChange, UserResource, AdminUser, SearchModel } from '../shared/model';\r\nimport { DataService } from './data.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SequencePage } from '../shared/sequencepage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AccountService {\r\n\r\n  constructor(private data: DataService, private storage: StorageService) {\r\n  }\r\n\r\n  // Get token\r\n  public getUserToken(user: UserLogin): Observable<Operation<Token>> {\r\n    const url = '/api/v1/account/login';\r\n    const result = this.data.PostWithOutToken<Token>(url, user);\r\n    return result;\r\n  }\r\n\r\n  // user registration\r\n  public userLogin(model: UserLogin): Observable<Operation<User>> {\r\n    const url = `/api/v1/account/register`;\r\n    const r = this.data.Post<User>(url, model);\r\n    return r;\r\n  }\r\n\r\n\r\n  public getUsers(): Observable<Operation<User[]>> {\r\n    return this.data.Get<User[]>('/api/account/users');\r\n  }\r\n\r\n  // get user by user id\r\n  public getUser(userId: number): Observable<Operation<User>> {\r\n\r\n    const url = `/api/v1/account/user/${userId}`;\r\n    const r = this.data.Get<User>(url);\r\n    return r;\r\n  }\r\n\r\n\r\n    // get user by user id\r\n    public getCurrentUser(): Observable<Operation<User>> {\r\n\r\n      const url = `/api/v1/account/current-user`;\r\n      const r = this.data.Get<User>(url);\r\n      return r;\r\n    }\r\n\r\n  // delete funtnx\r\n  public deleteUser(id: number): Observable<Operation<User>> {\r\n    const url = '/api/v1/account/' + id;\r\n    return this.data.Delete<User>(url);\r\n  }\r\n\r\n  // register user\r\n  public registerUser(model: User): Observable<Operation<User>> {\r\n    const url = '/api/v1/account/register';\r\n    return this.data.Post<User>(url, model);\r\n  }\r\n\r\n  // update profile\r\n  public updateProfile(model: User): Observable<Operation<User>> {\r\n    const url = `/api/v1/account/update-profile`;\r\n    return this.data.Put<User>(url, model);\r\n  }\r\n    // update profile\r\n    public updateWebProfile(model: User): Observable<Operation<User>> {\r\n      const url = `/api/v1/account/update-userprofile`;\r\n      return this.data.Put<User>(url, model);\r\n    }\r\n  // change password ..\r\n  public changepassword(model: PasswordChange) {\r\n    const url = `/api/v1/account/change-password`;\r\n    return this.data.Put<User>(url, model);\r\n  }\r\n\r\n  public  registerCentralAdmin(model: UserResource) {\r\n    const url = `/api/v1/account/register`;\r\n    return this.data.Post<User>(url, model);\r\n  }\r\n\r\n  // get user list..\r\n  public getRegisterUser(pageIndex: number, pageSize: number):\r\n   Observable<Operation<SequencePage<UserResource>>> {\r\n    const url = `/api/v1/account/${pageIndex}/all/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<UserResource>>(url);\r\n    return result;\r\n  }\r\n\r\n  // get user list..\r\n  public getUserList(pageIndex: number, pageSize: number):\r\n   Observable<Operation<SequencePage<User>>> {\r\n    const url = `/api/v1/account/${pageIndex}/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<User>>(url);\r\n    return result;\r\n  }\r\n\r\n   // get user list..\r\n   public getUserAdminList(model: SearchModel): Observable<Operation<SequencePage<User>>> {\r\n    const url = `/api/v1/account/customer-users`;\r\n    const result = this.data.Post<SequencePage<User>>(url, model);\r\n    return result;\r\n  }\r\n\r\n  public getAgentUserdata(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<User>>> {\r\n   const url = `/api/v1/account/${pageIndex}/agent/${pageSize}`;\r\n   console.log(url);\r\n   const result = this.data.Get<SequencePage<User>>(url);\r\n   console.log(result);\r\n   return result;\r\n }\r\n\r\n public ChangePasswordOk(model: PasswordChange): Observable<Operation<PasswordChange>> {\r\n  const url = `/api/v1/account/change-password`;\r\n  const result = this.data.Put<PasswordChange>(url, model);\r\n  return result;\r\n }\r\n public GetAdminUser(): Observable<Operation<User[]>> {\r\n\r\n  const url = `/api/v1/account/admin-users-data`;\r\n  const result = this.data.Get<User[]>(url);\r\n  return result;\r\n }\r\n\r\n public GetAdminUserPaged(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<User>>> {\r\n\r\n  const url = `/api/v1/account/admin-users-data/${pageIndex}/${pageSize}`;\r\n  const result = this.data.Get<SequencePage<User>>(url);\r\n  return result;\r\n }\r\n public GetAdminUserSearch(model: SearchModel): Observable<Operation<SequencePage<User>>> {\r\n\r\n  const url = `/api/v1/account/admin-records`;\r\n\r\n  const result = this.data.Post<SequencePage<User>>(url, model);\r\n  return result;\r\n }\r\n public CreateUser(model: AdminUser): Observable<Operation<AdminUser>>  {\r\n  const url = `/api/v1/account/register-user`;\r\n   model.IsActive = true;\r\n\r\n  const result = this.data.Post<AdminUser>(url, model);\r\n\r\n  return result;\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User, Token, UserLogin, Operation, PasswordChange, ResponseResource, UserResource, Customer, SearchModel } from '../shared/model';\r\nimport { DataService } from './data.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SequencePage } from '../shared/sequencepage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CustomerService {\r\n\r\n  constructor(private data: DataService, private storage: StorageService) {\r\n  }\r\n   public getCustomerSeach(model: SearchModel): Observable<Operation<SequencePage<Customer>>> {\r\n    const url = `/api/v1/customer/records`;\r\n    const result = this.data.Post<SequencePage<Customer>>(url, model);\r\n    return result;\r\n   }\r\n  public getCustomers(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<Customer>>> {\r\n\r\n    const url = `/api/v1/customer/${pageIndex}/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<Customer>>(url);\r\n    return result;\r\n  }\r\n\r\n  public getActiveCustomers(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<Customer>>> {\r\n\r\n    const url = `/api/v1/customer/${pageIndex}/active/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<Customer>>(url);\r\n    return result;\r\n  }\r\n  public getInActiveCustomers(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<Customer>>> {\r\n\r\n    const url = `/api/v1/customer/${pageIndex}/in-active/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<Customer>>(url);\r\n    return result;\r\n  }\r\n\r\n  public CreateCustomer(model: Customer): Observable<Operation<Customer>> {\r\n\r\n    const url = `/api/v1/Customer/registration-web`;\r\n\r\n    const result = this.data.Post<Customer>(url, model);\r\n    return result;\r\n  }\r\n\r\n\r\n  public resetCustomerBalance(id: number): Observable<Operation<void>> {\r\n\r\n    const url = `/api/v1/customer/reset-customer/${id}/balance`;\r\n\r\n    const result = this.data.Get<void>(url);\r\n    return result;\r\n  }\r\n\r\n  public GetCustomer(id: number): Observable<Operation<Customer>> {\r\n\r\n    const url = `/api/v1/customer/${id}/item`;\r\n    const result = this.data.Get<Customer>(url);\r\n    return result;\r\n  }\r\n\r\npublic UpdateCustomer(model: Customer): Observable<Operation<Customer>> {\r\n\r\n  const url = `/api/v1/customer/update`;\r\n  const result = this.data.Put<Customer>(url, model);\r\n  return result;\r\n}\r\n\r\n}\r\n\r\n\r\n","import { Injectable, ViewContainerRef } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEvent } from '@angular/common/http';\r\nimport { User, Token, Operation, ResponseResource } from '../shared/model';\r\nimport { StorageService } from './storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\r\nimport { Constants } from '../shared/Constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  private users: User[] = [];\r\n\r\n  public token: Token = new Token();\r\n  public userId: number;\r\n  // private baseUrl: string = 'http:\\\\localhost:6787\\';\r\n  // private baseUrl1: string = 'http:\\\\67.144.45.89:71\\';\r\n\r\n  constructor(private http: HttpClient, private storage: StorageService, private router: Router,\r\n    private toastr: ToastrService, private spinnerService: Ng4LoadingSpinnerService) {\r\n  }\r\n\r\n\r\n  // public httpOptions = {\r\n  //   headers: new HttpHeaders({\r\n  //     'Content-Type': 'application/json',\r\n  //     'Authorization': `Bearer ${this.storage.Token.token}`\r\n  //   })\r\n  // };\r\n\r\n  public GetToken(): Token {\r\n    const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n    return _toks;\r\n  }\r\n  public GetRole(): string {\r\n    const user = localStorage.getItem(Constants.UserKey);\r\n    const _user = <User>JSON.parse(user);\r\n    return _user.Role;\r\n  }\r\n\r\n  public Get<T>(url: string, data?: any): Observable<Operation<T>> {\r\n\r\n     const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n    const httpOption = { headers: new HttpHeaders({ 'Authorization': `Bearer ${_toks}` }) };\r\n this.spinnerService.show();\r\n    return this.http.get<Operation<T>>(url, httpOption).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public Put<T>(url: string, data?: any): Observable<Operation<T>> {\r\n\r\n    const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n\r\n    const httpOption = { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + _toks }) };\r\n    this.spinnerService.show();\r\n    return this.http.put<Operation<T>>(url, data, httpOption).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public Delete<T>(url: string, data?: any): Observable<Operation<T>> {\r\n\r\n    const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n\r\n    const httpOption = { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + _toks }) };\r\n    this.spinnerService.show();\r\n    return this.http.delete<Operation<T>>(url, httpOption).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public GetWithOutToken<T>(url: string, data?: any): Observable<Operation<T>> {\r\n    this.spinnerService.show();\r\n    return this.http.get<Operation<T>>(url).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public PostWithOutToken<T>(url: string, data?: any): Observable<Operation<T>> {\r\n    this.spinnerService.show();\r\n    return this.http.post<Operation<T>>(url, data).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public PostBlob<T>(url: string, blob: any): Observable<HttpEvent<T>> {\r\n    this.spinnerService.show();\r\n    return this.http.post<T>(url, { responseType: 'blob' }, blob).pipe(\r\n      tap( // Log the result or error\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  public Post<T>(url: string, data?: any): Observable<Operation<T>> {\r\n    const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n// console.log(_toks);\r\n    const httpOption = { headers: new HttpHeaders({ 'Authorization': 'Bearer ' + _toks }) };\r\n    this.spinnerService.show();\r\n    return this.http.post<Operation<T>>(url, data, httpOption).pipe(\r\n      tap( // Log the result or error\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        data => {\r\n          this.log(url, data);\r\n          this.spinnerService.hide();\r\n        },\r\n        error => {\r\n          this.logError(url, error);\r\n          this.spinnerService.hide();\r\n        }\r\n      ),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      // this.toastr.error('An error occurred:', error.error.message, 'Error');\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n\r\n      // this.toastr.error(`Backend returned code ${error.status}, ` +\r\n      //  `body was: ${error.error}`, 'Error');\r\n\r\n      return Observable.throw(error.message);\r\n    }\r\n\r\n    // return an ErrorObservable with a user-facing error message\r\n    // this.toastr.error('Something bad happened; please try again later.', 'Error');\r\n\r\n    return;\r\n    // return new ErrorObservable(\r\n    //  'Something bad happened; please try again later.');\r\n  }\r\n\r\n  private _handleError(err: HttpErrorResponse | any) {\r\n    const errorMsg = err.message || 'Unable to retrieve data';\r\n    return Observable.throw(errorMsg);\r\n  }\r\n\r\n  private log(url: string, data?: any) {\r\n    // console.log(`Http operation was successfully called ${url}`);\r\n  }\r\n\r\n  private logError(url: string, data?: any) {\r\n\r\n    console.log(`Http operation failed ${url}`);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  User,\r\n  Token,\r\n  UserLogin,\r\n  Operation,\r\n  PasswordChange,\r\n  ResponseResource,\r\n  UserResource,\r\n  DashboardModel,\r\n  SmsNotificationModel\r\n} from \"../shared/model\";\r\nimport { DataService } from \"./data.service\";\r\nimport { StorageService } from \"./storage.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SequencePage } from \"../shared/sequencepage\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ReportService {\r\n  constructor(private data: DataService, private storage: StorageService) {}\r\n\r\n  // user registration\r\n  public GetDashboard(): Observable<Operation<DashboardModel>> {\r\n    const url = `/api/v1/report/dashboard`;\r\n    const r = this.data.Get<DashboardModel>(url);\r\n    return r;\r\n  }\r\n\r\n  public GetSmsNotification(): Observable<Operation<SmsNotificationModel>> {\r\n    const url = `/api/v1/settlement/sms-notify`;\r\n    const r = this.data.Get<SmsNotificationModel>(url);\r\n    return r;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Injectable,\r\n  PLATFORM_ID,\r\n  Inject,\r\n  OnInit\r\n} from \"@angular/core\";\r\nimport { Constants } from \"../shared/Constants\";\r\nimport { User, Token } from \"../shared/model\";\r\nimport { isPlatformBrowser, isPlatformServer } from \"@angular/common\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class StorageService implements OnInit {\r\n  public user: User = new User();\r\n  public token: Token = new Token();\r\n\r\n  constructor() {}\r\n\r\n  public GetToken(): Token {\r\n    const token = localStorage.getItem(Constants.OAuthTokenKey);\r\n    const _toks = <Token>JSON.parse(token);\r\n    return _toks;\r\n  }\r\n  public GetUserInfo(): User {\r\n    const _user = localStorage.getItem(Constants.UserKey);\r\n    this.user = <User>JSON.parse(_user);\r\n    return this.user;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  get User() {\r\n    if (!this.user) {\r\n      this.user = this.Get<User>(Constants.UserKey);\r\n    }\r\n    return this.user;\r\n  }\r\n\r\n  set User(user: User) {\r\n    this.user = user;\r\n    this.Store(Constants.UserKey, user);\r\n  }\r\n\r\n  get Token() {\r\n    if (!this.token) {\r\n      this.token = this.Get<Token>(Constants.OAuthTokenKey);\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  set Token(token: Token) {\r\n    this.Store(Constants.OAuthTokenKey, token);\r\n  }\r\n\r\n  // Local Storage Methods\r\n  private Store(key, value) {\r\n    return localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  private Remove(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  private Get<T>(key: string) {\r\n    return <T>JSON.parse(localStorage.getItem(key));\r\n  }\r\n\r\n  Clear() {\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User, Token, UserLogin, Operation, PasswordChange, ResponseResource, UserResource, TransactionResponse, TransactionLogger, SearchModel } from '../shared/model';\r\nimport { DataService } from './data.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SequencePage } from '../shared/sequencepage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TransactionService {\r\n\r\n  constructor(private data: DataService, private storage: StorageService) {\r\n  }\r\n\r\n  public getTransactionSearch(model: SearchModel): Observable<Operation<SequencePage<TransactionResponse>>> {\r\n\r\n    const url = `/api/v1/transaction/records`;\r\n\r\n    const result = this.data.Post<SequencePage<TransactionResponse>>(url, model);\r\n\r\n    return result;\r\n  }\r\n  public getTransaction(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<TransactionResponse>>> {\r\n\r\n    const url = `/api/v1/transaction/${pageIndex}/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<TransactionResponse>>(url);\r\n    return result;\r\n  }\r\n  public getTransactionLog(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<TransactionResponse>>> {\r\n\r\n    const url = `/api/v1/transaction/${pageIndex}/logs/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<TransactionResponse>>(url);\r\n    return result;\r\n  }\r\n  public getCreditTransaction(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<TransactionResponse>>> {\r\n\r\n    const url = `/api/v1/transaction/${pageIndex}/credit/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<TransactionResponse>>(url);\r\n    return result;\r\n  }\r\n  public getDebitTransaction(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<TransactionResponse>>> {\r\n\r\n    const url = `/api/v1/transaction/${pageIndex}/debit/${pageSize}`;\r\n\r\n    const result = this.data.Get<SequencePage<TransactionResponse>>(url);\r\n    return result;\r\n  }\r\n\r\n  public getCustomerNameByCode(search: string): Observable<Operation<string>> {\r\n\r\n    const url = `/api/v1/customer/${search}`;\r\n\r\n    const result = this.data.Get<string>(url);\r\n    return result;\r\n  }\r\n\r\n public PostTransactionLog(model: TransactionLogger): Observable<Operation<TransactionLogger>> {\r\n\r\n  const url = `/api/v1/transaction/log`;\r\n  const result = this.data.Post<TransactionLogger>(url, model);\r\n\r\n  return result;\r\n }\r\n public ApproveTransaction(id: number): Observable<Operation<TransactionLogger>> {\r\n\r\n  const url = `/api/v1/transaction/approval/${id}`;\r\n  const result = this.data.Get<TransactionLogger>(url);\r\n\r\n  return result;\r\n }\r\n public DelineTransaction(id: number): Observable<Operation<TransactionLogger>> {\r\n\r\n  const url = `/api/v1/transaction/decline/${id}`;\r\n  const result = this.data.Get<TransactionLogger>(url);\r\n\r\n  return result;\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {  Operation, WithdrawalResponse, WithdrawalLogger, WithdrawApprovalModel, AgentUserAdmin, SearchModel } from '../shared/model';\r\nimport { DataService } from './data.service';\r\nimport { StorageService } from './storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SequencePage } from '../shared/sequencepage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class WithdrawalService {\r\n\r\n  constructor(private data: DataService, private storage: StorageService) {\r\n  }\r\n\r\n  public getWithdrawalSearch(model: SearchModel): Observable<Operation<SequencePage<WithdrawalResponse>>> {\r\n\r\n    const url = `/api/v1/withdrawal/records`;\r\n    const result = this.data.Post<SequencePage<WithdrawalResponse>>(url, model);\r\n\r\n    return result;\r\n  }\r\n  // Get withdrawal\r\n  public getWithdrawal(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<WithdrawalResponse>>> {\r\n\r\n    const url = `/api/v1/withdrawal/${pageIndex}/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<WithdrawalResponse>>(url);\r\n\r\n    return result;\r\n  }\r\n\r\n  public getApproveWithdrawal(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<WithdrawalResponse>>> {\r\n\r\n    const url = `/api/v1/withdrawal/${pageIndex}/approved/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<WithdrawalResponse>>(url);\r\n\r\n    return result;\r\n  }\r\n  public getPaidWithdrawal(pageIndex: number, pageSize: number): Observable<Operation<SequencePage<WithdrawalResponse>>> {\r\n\r\n    const url = `/api/v1/withdrawal/${pageIndex}/paid/${pageSize}`;\r\n    const result = this.data.Get<SequencePage<WithdrawalResponse>>(url);\r\n\r\n    return result;\r\n  }\r\n\r\n  public getCustomerNameByCode(search: string): Observable<Operation<string>> {\r\n\r\n    const url = `/api/v1/customer/${search}`;\r\n\r\n    const result = this.data.Get<string>(url);\r\n    return result;\r\n  }\r\n  public PostWithdrawal(model: WithdrawalLogger): Observable<Operation<WithdrawalLogger>>  {\r\n\r\n    const url = `/api/v1/withdrawal/web`;\r\n    const result = this.data.Post<WithdrawalLogger>(url, model);\r\n\r\n    return result;\r\n  }\r\n\r\n  public WithdrawalApproval(model: WithdrawApprovalModel): Observable<Operation<WithdrawalLogger>>  {\r\n\r\n    const url = `/api/v1/withdrawal/approval/admin`;\r\n    const result = this.data.Post<WithdrawalLogger>(url, model);\r\n\r\n    return result;\r\n  }\r\n\r\n  public WithdrawalDecline(id: number): Observable<Operation<void>>  {\r\n\r\n    const url = `/api/v1/withdrawal/decline/${id}`;\r\n\r\n    const result = this.data.Get<void>(url);\r\n\r\n    return result;\r\n  }\r\n\r\n  public GetSystemAdmin(): Observable<Operation<AgentUserAdmin[]>> {\r\n\r\n    const url = `/api/v1/account/agent-names`;\r\n    const result = this.data.Get<AgentUserAdmin[]>(url);\r\n\r\n    return result;\r\n  }\r\n}\r\n","export namespace Constants {\r\n  // constant for fetching authorization from local browser keystore\r\n  export const OAuthTokenKey = \"payajotok\";\r\n\r\n  export const UserKey = \"payajouser\";\r\n\r\n  export const Web_Address = \"\";\r\n\r\n  export const LoginUrl = \"/account/index\";\r\n\r\n  export const Url =\r\n    document.location.protocol +\r\n    \"//\" +\r\n    document.location.hostname +\r\n    \":\" +\r\n    document.location.port;\r\n\r\n  export const Roles = {\r\n    Administrator: \"Administrator\",\r\n    User: \"User\"\r\n  };\r\n  export const ResponseCode = {\r\n    Success: \"200\"\r\n  };\r\n\r\n  export const AppMonths = {\r\n    January: \"January\",\r\n    February: \"February\",\r\n    March: \"March\",\r\n    April: \"April\",\r\n    May: \"May\",\r\n    June: \"June\",\r\n    July: \"July\",\r\n    August: \"August\",\r\n    September: \"September\",\r\n    October: \"October\",\r\n    November: \"November\",\r\n    December: \"December\"\r\n  };\r\n\r\n  export const DATE_FMT = \"dd/MMM/yyyy\";\r\n  export const DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm:ss`;\r\n}\r\n","import { KeyValue } from \"@angular/common\";\r\n\r\nexport class Model {\r\n  public CreatedDate: Date;\r\n  public createdby: number;\r\n  public modifieddate: Date;\r\n  public modifiedby: number;\r\n  public Statuss: RecordStatus;\r\n}\r\n\r\nexport enum RecordStatus {\r\n  Active,\r\n  Deleted,\r\n  Deactived,\r\n  Locked,\r\n  Blocked,\r\n  Processing,\r\n  Pending,\r\n  Successful,\r\n  Failed\r\n}\r\nexport class ResponseResource<T> {\r\n  public ResponseCode: string;\r\n  public ResponseDesc: string;\r\n  public Errors: string[] = new Array<string>();\r\n  public ResponseData!: T;\r\n  public ValidationErrors: KeyValue<string, string[]>;\r\n}\r\n\r\nexport class Token {\r\n  public token!: string;\r\n  public expiration!: Date;\r\n  public user!: User;\r\n\r\n  public get loginRequired(): boolean {\r\n    return this.token.length === 0 || this.expiration > new Date();\r\n  }\r\n}\r\n\r\nexport class Operation<T> {\r\n  Result!: T;\r\n  Succeeded!: boolean;\r\n  Message!: string;\r\n}\r\nexport class Alert {\r\n  type!: AlertType;\r\n  message!: string;\r\n}\r\n\r\nexport enum AlertType {\r\n  Success,\r\n  Error,\r\n  Info,\r\n  Warning\r\n}\r\n\r\nexport class UserLogin {\r\n  public UserName: string;\r\n  public Password: string;\r\n  public RememberMe: boolean;\r\n}\r\n\r\nexport class SmsNotificationModel {\r\n  public NotifyCount: number;\r\n  public SmsCost: number;\r\n  public Notifications: NotifyModel[];\r\n}\r\n\r\nexport class NotifyModel {\r\n  public Id: number;\r\n  public Sender: string;\r\n  public NotificationType: NotificationType;\r\n  public Message: string;\r\n  public Recipient: string;\r\n  public NotificationSystem: NotificationSystem;\r\n  public Cost: number;\r\n  public SendToUserId: number;\r\n  public IsNotify: boolean;\r\n  public MerchantId: number;\r\n  public CustomerId: number;\r\n  public TotalMessageSent: number;\r\n  public IsPaid: boolean;\r\n  public CustomerName: string;\r\n  public CreatedDate: Date;\r\n}\r\n\r\nexport enum NotificationSystem {\r\n  UserAccount,\r\n  Transacition,\r\n  CollectionType,\r\n  Notification,\r\n  Withdrawal\r\n}\r\n\r\nexport enum NotificationType {\r\n  Sms,\r\n  Email\r\n}\r\n\r\nexport class DashboardModel {\r\n  public TotalMerchantBalance: number;\r\n  public TotalDailyCredit: number;\r\n  public TotalWeeklyCredit: number;\r\n  public TotalMonthlyCredit: number;\r\n  public TotalDailyDebit: number;\r\n  public TotalWeeklyDebit: number;\r\n  public TotalCustomerToday: number;\r\n  public TotalMonthlyDebit: number;\r\n  public TotalActiveCustomers: number;\r\n  public LastTenTransaction: TransactionResponse[];\r\n  public LastTenWithdrawal: WithdrawalResponse[];\r\n}\r\n\r\nexport class TransactionResponse extends Model {\r\n  public Id: number;\r\n  public TransactionNo: string;\r\n  public Amount: number;\r\n  public TransactionType: string; // DR or CR\r\n  public TransactionCode: string;\r\n  public CustomerId: number;\r\n  public MerchantId: number;\r\n  public Merchant: Merchant;\r\n  public Customer: Customer;\r\n  public IsNotified: boolean;\r\n  public IsService: boolean;\r\n  public CollectionTypeId: number;\r\n  public TransactionMessage: string;\r\n  public TechFeeStartDate: Date;\r\n  public TechFeeEndDate: Date;\r\n  public TransactionMapCode: string;\r\n  public Agent: AgentModel;\r\n  public UserName: string;\r\n  public MerchantName: string;\r\n  public AgentName: string;\r\n  public IsApproved: boolean;\r\n  private _CustomerCode: string;\r\n  public get CustomerCode(): string {\r\n    return this._CustomerCode;\r\n  }\r\n  public set CustomerCode(value: string) {\r\n    this._CustomerCode = value;\r\n  }\r\n}\r\n\r\nexport class AgentModel {\r\n  public AgentId: number;\r\n  public FirstName: string;\r\n  public LastName: string;\r\n  public MiddleName: string;\r\n  public EmailAddress: string;\r\n  public PhoneNumber: string;\r\n  public Address: string;\r\n  public Password: string;\r\n  public ConfirmPassword: string;\r\n  public MerchantId: number;\r\n  public UserName: string;\r\n}\r\n\r\nexport class TransactionLogger {\r\n  public CustomerCode: string;\r\n  public Amount: number;\r\n}\r\nexport class WithdrawalLogger {\r\n  public CustomerCode: string;\r\n  public Amount: number;\r\n}\r\nexport class Merchant {\r\n  public MerchantId: number;\r\n  public Name: string;\r\n  public Address: string;\r\n  public BVN: string;\r\n  public MerchantNo: string;\r\n  public GovtRegNo: string;\r\n  public BusinessMobile: string;\r\n  public City: string;\r\n  public State: string;\r\n  public Country: string;\r\n  public ImagePath: string;\r\n  public ImageContentType: string;\r\n  public ImageContentLength: number;\r\n  public IsCancelled: boolean;\r\n  public EmailAddress: boolean;\r\n}\r\nexport class Customer extends Model {\r\n  public UserName: string;\r\n  public CustomerId: number;\r\n  public Title: string;\r\n  public FirstName: string;\r\n  public LastName: string;\r\n  public MiddleName: string;\r\n  public Mobile: string;\r\n  public Gender: string;\r\n  public Address: string;\r\n  public EmailAddress: string;\r\n  public IsLocked: boolean;\r\n  public Channel: RegistrationChannel;\r\n  public MerchantId: number;\r\n  public Merchant: Merchant;\r\n  public DateOfBirth: Date;\r\n  public NokName: string;\r\n  public NokEmail: string;\r\n  public NokMobile: string;\r\n  public NokRelationship: string;\r\n  public City: string;\r\n  public State: string;\r\n  public Country: string;\r\n  public CustomerCode: string;\r\n  public Password: string;\r\n  public TotalCustomerBalance: number;\r\n  public UserId: number;\r\n  public Status: boolean;\r\n  public CustomerBalance: number;\r\n  public Signature: File;\r\n  public Picture: File;\r\n  public PicturePath: string;\r\n  public SignaturePath: string;\r\n}\r\nexport enum RegistrationChannel {\r\n  IsMobile,\r\n  IsWeb\r\n}\r\n\r\nexport class SearchModel {\r\n  public Search: string;\r\n  public StartDate: Date;\r\n  public EndDate: Date;\r\n  public pageIndex: number;\r\n  public pageSize: number;\r\n}\r\nexport class AgentUserAdmin {\r\n  public Name: string;\r\n  public AgentUserId: number;\r\n}\r\nexport class WithdrawalResponse extends Model {\r\n  public Id: number;\r\n  public MerchantId: number;\r\n  public Merchant: Merchant;\r\n  public CustomerId: number;\r\n  public Customer: Customer;\r\n  public Amount: number;\r\n  public WithdrawalStatus: WithdrawalStatus;\r\n  public Message: string;\r\n  public Password: string;\r\n}\r\nexport class WithdrawApprovalModel {\r\n  public WithdrawalId: number;\r\n  public AgentUserId: number;\r\n}\r\nexport class WithdrawalStatus {\r\n  Pending;\r\n  Approved;\r\n  Paid;\r\n}\r\n\r\nexport class AdminUser {\r\n  public FirstName: string;\r\n  public LastName: string;\r\n  public Mobile: string;\r\n  public Address: string;\r\n  public EmailAddress: string;\r\n  public UserName: string;\r\n  public Role: string;\r\n  public IsActive: boolean;\r\n  public Gender: string;\r\n}\r\n\r\nexport class User {\r\n  public Title!: string;\r\n  public UserId!: number;\r\n  public FirstName!: string;\r\n  public LastName!: string;\r\n  public MiddelName!: string;\r\n  public Mobile!: string;\r\n  public Gender!: number;\r\n  public Address!: string;\r\n  public EmailAddress!: string;\r\n  public Password!: string;\r\n  public Salt!: string;\r\n  public IsEmailConfirmed!: boolean;\r\n  public IsPhoneConfirmed!: boolean;\r\n  public IsLocked!: boolean;\r\n  public UserName: string;\r\n  public FullName!: string;\r\n  public LastLoginDate!: Date;\r\n  public Channel!: RegChannel;\r\n  public ApplicationCode!: string;\r\n  public DateOfBirth!: Date;\r\n  public UserStatus!: UserStatus;\r\n  public ConfirmPassword!: string;\r\n  public CreatedDate: Date;\r\n  public Role: string;\r\n  public MerchantName: string;\r\n}\r\n\r\nexport class PasswordChange {\r\n  public UserId!: number;\r\n  public Password: string;\r\n  public NewPassword!: string;\r\n  public ConfirmPassword: string;\r\n}\r\n\r\nexport class UserResource {\r\n  public PFAId: number;\r\n  public FirstName: string;\r\n  public LastName: string;\r\n  public OtherNames: string;\r\n  public EmailAddress: string;\r\n  public PhoneNumber: string;\r\n  public Address: string;\r\n  public Gender: string;\r\n  public Password: string;\r\n  public ConfirmPassword: string;\r\n  public UserType: string;\r\n}\r\n\r\nenum RegChannel {\r\n  IsMobile = 1,\r\n  IsWeb = 2\r\n}\r\n\r\nenum UserStatus {\r\n  Pending,\r\n  Verified,\r\n  Blocked\r\n}\r\n\r\nexport class UserRole {\r\n  public UserRoleId!: number;\r\n  public RoleId!: number;\r\n  public UserId!: number;\r\n  public User!: User;\r\n  public Role!: Role;\r\n}\r\nexport class Role {\r\n  public RoleId!: number;\r\n  public Name!: string;\r\n}\r\nexport class Dashboard {\r\n  public CategoryCount!: number;\r\n  public ProductCount!: number;\r\n  public AdvertCount!: number;\r\n  public VideoCount!: number;\r\n  public UsersCount!: number;\r\n  public QuestionCount!: number;\r\n  public ReceiptCount!: number;\r\n  public TotalShareAndEarnCount!: number;\r\n  public TotalWatchEarnCount!: number;\r\n  public TotalSurveyAnsweredCount!: number;\r\n}\r\n","module.exports = \"<div class=\\\"sidebar sidebar-custom\\\" data-color=\\\"#9a7f37\\\">\\n  <div class=\\\"logo\\\">\\n    <a href=\\\"javascript:;\\\" class=\\\"simple-text logo-mini\\\">\\n      <img src=\\\"../assets/img/eureka-logo.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"Image\\\">\\n    </a>\\n    <a href=\\\"javascript:;\\\" class=\\\"simple-text logo-normal\\\">\\n      PayAjo\\n    </a>\\n  </div>\\n  <div class=\\\"sidebar-wrapper ps-container ps-theme-default ps-active-y\\\" data-ps-id=\\\"4cf8b97b-28e4-7c84-16c4-f04b08b36ef8\\\">\\n    <ul class=\\\"nav nav-custom\\\">\\n      <li class=\\\"active\\\">\\n        <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/dashboard']\\\">\\n          <i class=\\\"now-ui-icons design_app\\\"></i>\\n          <p>Dashboard</p>\\n        </a>\\n      </li>\\n      <li>\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#customer\\\" aria-expanded=\\\"false\\\" class=\\\"collapsed\\\">\\n          <i class=\\\"now-ui-icons education_atom\\\"></i>\\n          <p>Customers\\n            <b class=\\\"caret\\\"></b>\\n          </p>\\n        </a>\\n\\n        <div class=\\\"collapse\\\" id=\\\"customer\\\">\\n          <ul class=\\\"nav\\\">\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/customer']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">C</span>\\n                <span class=\\\"sidebar-normal\\\">All Customers</span>\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/active-customer']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">A</span>\\n                <span class=\\\"sidebar-normal\\\">Active Customers</span>\\n              </a>\\n            </li>\\n            <!-- <li>\\n                          <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/inactive-customer']\\\">\\n                              <span class=\\\"sidebar-mini-icon\\\">I</span>\\n                              <span class=\\\"sidebar-normal\\\">InActve Customers</span>\\n                          </a>\\n                      </li> -->\\n          </ul>\\n        </div>\\n      </li>\\n      <li>\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#transactions\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\n          <i class=\\\"now-ui-icons files_single-copy-04\\\"></i>\\n          <p>Transactions\\n            <b class=\\\"caret\\\"></b>\\n          </p>\\n        </a>\\n\\n        <div class=\\\"collapse\\\" id=\\\"transactions\\\">\\n          <ul class=\\\"nav\\\">\\n\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/transactionlog']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">TL</span>\\n                <span class=\\\"sidebar-normal\\\">Transaction Log</span>\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/transaction']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">T</span>\\n                <span class=\\\"sidebar-normal\\\">All Transactions</span>\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/credittransaction']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">C</span>\\n                <span class=\\\"sidebar-normal\\\">Credit Transactions</span>\\n              </a>\\n            </li>\\n\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/debittransaction']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">D</span>\\n                <span class=\\\"sidebar-normal\\\">Debit Transaction</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n\\n\\n      <li>\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#withdrawal\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\n          <i class=\\\"now-ui-icons design_bullet-list-67\\\"></i>\\n          <p>Withdrawal\\n            <b class=\\\"caret\\\"></b>\\n          </p>\\n        </a>\\n\\n        <div class=\\\"collapse\\\" id=\\\"withdrawal\\\">\\n          <ul class=\\\"nav\\\">\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/withdrawal']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">W</span>\\n                <span class=\\\"sidebar-normal\\\">All Withdrawal</span>\\n              </a>\\n            </li>\\n            <!-- <li>\\n                          <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/approvedwithdrawal']\\\" >\\n                              <span class=\\\"sidebar-mini-icon\\\">A</span>\\n                              <span class=\\\"sidebar-normal\\\">Approved Withdrawal</span>\\n                          </a>\\n                      </li> -->\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/paidwithdrawal']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">P</span>\\n                <span class=\\\"sidebar-normal\\\">Paid Withdrawal</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n      <li>\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#useraccount\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\n          <i class=\\\"now-ui-icons business_chart-pie-36\\\"></i>\\n          <p>User Account\\n            <b class=\\\"caret\\\"></b>\\n          </p>\\n        </a>\\n        <div class=\\\"collapse\\\" id=\\\"useraccount\\\">\\n          <ul class=\\\"nav\\\">\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/users']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">U</span>\\n                <span class=\\\"sidebar-normal\\\">All User </span>\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/profile']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">P</span>\\n                <span class=\\\"sidebar-normal\\\">User Profile</span>\\n              </a>\\n            </li>\\n            <li *ngIf=\\\"roleName == 'Merchant Admin'\\\">\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/agent']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">A</span>\\n                <span class=\\\"sidebar-normal\\\">All Agent</span>\\n              </a>\\n            </li>\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/change-password']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">C</span>\\n                <span class=\\\"sidebar-normal\\\">Change Password</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n      <li *ngIf=\\\"roleName == 'Merchant Admin'\\\">\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#accountcharges\\\" class=\\\"collapsed\\\" aria-expanded=\\\"false\\\">\\n          <i class=\\\"fa fa-credit-card\\\"></i>\\n          <p>Account Charges\\n            <b class=\\\"caret\\\"></b>\\n          </p>\\n\\n        </a>\\n        <div class=\\\"collapse\\\" id=\\\"accountcharges\\\">\\n          <ul class=\\\"nav\\\">\\n            <li>\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/smsdebit']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">SD</span>\\n                <span class=\\\"sidebar-normal\\\">SMS Debit</span>\\n              </a>\\n            </li>\\n            <li *ngIf=\\\"roleName == 'Merchant Admin1'\\\">\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/techdebit']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">TD</span>\\n                <span class=\\\"sidebar-normal\\\">Tech Fee Debit</span>\\n              </a>\\n            </li>\\n            <li *ngIf=\\\"roleName == 'Merchant Admin1'\\\">\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/smspayment']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">SP</span>\\n                <span class=\\\"sidebar-normal\\\">Sms Payment</span>\\n              </a>\\n            </li>\\n            <li *ngIf=\\\"roleName == 'Merchant Admin1'\\\">\\n              <a href=\\\"javascript:;\\\" [routerLink]=\\\"['/techpayment']\\\">\\n                <span class=\\\"sidebar-mini-icon\\\">TF</span>\\n                <span class=\\\"sidebar-normal\\\">tech Fee Payment</span>\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </li>\\n    </ul>\\n    <div class=\\\"ps-scrollbar-x-rail\\\" style=\\\"left: 0px; bottom: 0px;\\\">\\n      <div class=\\\"ps-scrollbar-x\\\" tabindex=\\\"0\\\" style=\\\"left: 0px; width: 0px;\\\"></div>\\n    </div>\\n    <div class=\\\"ps-scrollbar-y-rail\\\" style=\\\"top: 0px; height: 613px; right: 0px;\\\">\\n      <div class=\\\"ps-scrollbar-y\\\" tabindex=\\\"0\\\" style=\\\"top: 0px; height: 488px;\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { StorageService } from \"../../service/storage.service\";\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: \"app-navigation\",\n  templateUrl: \"./navigation.component.html\"\n})\nexport class NavigationComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n  public roleName: string = \" \";\n  public merchantName: string;\n  public name: string;\n  public lastloginDate: Date;\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) {}\n\n  ngOnInit() {\n    try {\n      this.roleName = this.storage.GetUserInfo().Role;\n\n      if (this.roleName !== \" \") {\n        this.merchantName = this.storage.GetUserInfo().MerchantName;\n\n        this.name =\n          this.storage.GetUserInfo().LastName +\n          \" \" +\n          this.storage.GetUserInfo().FirstName;\n\n        this.lastloginDate = this.storage.GetUserInfo().LastLoginDate;\n      } else {\n        this.roleName = \" \";\n      }\n    } catch (ex) {}\n\n    // ../assets/js/plugins/perfect-scrollbar.jquery.min.js\n  }\n  logout() {\n    const protocol = document.location.protocol;\n    const hostname = document.location.hostname;\n    const port = document.location.port;\n\n    try {\n      this.storage.Clear();\n      document.location.href = `${protocol}//${hostname}:${port}/#/login`;\n    } catch (e) {\n      console.log(e);\n      document.location.href = `${protocol}//${hostname}:${port}/#/login`;\n    }\n  }\n}\n","module.exports = \"<!-- Navbar -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-absolute bg-primary fixed-top navbar-transparent\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-wrapper\\\">\\n      <div class=\\\"navbar-toggle toggled\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n          <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n          <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n        </button>\\n      </div>\\n      <!-- BreadCrumb -->\\n      <ul class=\\\"breadcrumb breadcrumb-custom\\\">\\n        <li class=\\\"breadcrumb-item\\\">\\n          <a href=\\\"javascript:;\\\" class=\\\"breadcrumb-active\\\">Dashboard</a>\\n        </li>\\n      </ul>\\n    </div>\\n    <button class=\\\"navbar-toggler collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\"\\n      aria-controls=\\\"navigation-index\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n      <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n    </button>\\n    <div class=\\\"navbar-collapse justify-content-end collapse\\\" id=\\\"navigation\\\" style=\\\"\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li> Merchant: <span style='color: orange'> {{merchantName | uppercase }} </span>\\n          &nbsp;Name: <span style='color: orange'> {{name | uppercase }}</span>\\n          &nbsp; Last Login date: <span style='color: orange'>{{\\n            lastloginDate | date }}</span> &nbsp;\\n        </li>\\n      </ul>\\n      <form>\\n        <div class=\\\"input-group no-border\\\">\\n          <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"now-ui-icons ui-1_zoom-bold\\\"></i>\\n          </span>\\n        </div>\\n      </form>\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item dropdown\\\">\\n\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"javascript:;\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\"\\n            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <i class=\\\"now-ui-icons users_single-02\\\"></i>\\n            <p>\\n              <span class=\\\"d-lg-none d-md-block\\\">\\n\\n              </span>\\n            </p>\\n          </a>\\n          <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:;\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:;\\\" (click)=\\\"logout()\\\">Sign out</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n<!-- End Navbar -->\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { StorageService } from \"../../service/storage.service\";\nimport * as $ from \"jquery\";\n\n@Component({\n  selector: \"app-topnav\",\n  templateUrl: \"./topnav.component.html\"\n})\nexport class TopNavComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n\n  public roleName: string = \" \";\n  public merchantName: string;\n  public name: string;\n  public lastloginDate: Date;\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService\n  ) {}\n\n  ngOnInit() {\n    try {\n      this.roleName = this.storage.GetUserInfo().Role;\n      this.merchantName = this.storage.GetUserInfo().MerchantName;\n      this.name =\n        this.storage.GetUserInfo().LastName +\n        \" \" +\n        this.storage.GetUserInfo().FirstName;\n\n      this.lastloginDate = this.storage.GetUserInfo().LastLoginDate;\n    } catch (ex) {\n      this.router.navigate([\"/login\"]);\n    }\n\n    // $.getScript('../assets/assets/js/core/jquery.min.js');\n  }\n  logout() {\n    const protocol = document.location.protocol;\n    const hostname = document.location.hostname;\n    const port = document.location.port;\n\n    try {\n      this.storage.Clear();\n      document.location.href = `${protocol}//${hostname}:${port}/#/login`;\n    } catch (e) {\n      console.log(e);\n      document.location.href = `${protocol}//${hostname}:${port}/#/login`;\n    }\n  }\n}\n","\r\n\r\n// Class that implements pagination\r\nexport class SequencePage<Data> {\r\n\r\n  PageIndex: number;\r\n  SequenceLength: number;\r\n  PageCount: number;\r\n  PageSize: number;\r\n\r\n  Page: Data[] = [];\r\n\r\n  constructor(page: Data[], sequenceLength: number, pageSize?: number, pageIndex?: number) {\r\n\r\n    if ( page === null || pageIndex < 0 || sequenceLength < 0 ) {\r\n       throw new Error('invalid page');\r\n    }\r\n\r\n    this.PageIndex = pageIndex || 0;\r\n    this.SequenceLength = sequenceLength;\r\n    this.Page = page;\r\n    this.PageSize = pageSize || page.length;\r\n\r\n    this.PageCount = sequenceLength === 0 ? 0 :\r\n     (Math.floor(this.SequenceLength / this.PageSize) + (this.SequenceLength % this.PageSize > 0 ? 1 : 0));\r\n  }\r\n\r\n  /// <summary>\r\n  /// Returns an array containing page indexes for pages immediately adjecent to the current page.\r\n  /// The span indicates how many pages indexes to each side of the current page should be returned\r\n  /// </summary>\r\n  /// <param name=\"span\"></param>\r\n  /// <returns></returns>\r\n  AdjacentIndexes(span: number): number[] {\r\n\r\n    if ( span < 0) {\r\n      throw new Error('invalid span: ' + span);\r\n    }\r\n\r\n    const fullspan = (span * 2) + 1;\r\n     let start = 0;\r\n     let  count = 0;\r\n\r\n    if (fullspan >= this.PageCount) {\r\n      count = this.PageCount;\r\n    } else {\r\n      start = this.PageIndex - span;\r\n      count = fullspan;\r\n\r\n      if (start < 0) {\r\n         start = 0;\r\n      }\r\n\r\n      if ((this.PageIndex + span) >= this.PageCount) {\r\n        start = this.PageCount - fullspan;\r\n      }\r\n\r\n    }\r\n\r\n    const pages: Array<number> = [];\r\n\r\n    for (let indx = 0; indx < count; indx++) {\r\n      pages.push(indx + start);\r\n    }\r\n\r\n    return pages;\r\n  }\r\n}\r\n","module.exports = \"html {\\r\\n  line-height: 1.15; /* 1 */\\r\\n  -ms-text-size-adjust: 100%; /* 2 */\\r\\n  -webkit-text-size-adjust: 100%; /* 2 */\\r\\n}\\r\\n\\r\\n/* Sections\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* Remove the margin in all browsers (opinionated).\\r\\n*/\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE 9-.\\r\\n*/\\r\\n\\r\\narticle,\\r\\naside,\\r\\nfooter,\\r\\nheader,\\r\\nnav,\\r\\nsection {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Correct the font size and margin on `h1` elements within `section` and\\r\\n* `article` contexts in Chrome, Firefox, and Safari.\\r\\n*/\\r\\n\\r\\nh1 {\\r\\n  font-size: 2em;\\r\\n  margin: 0.67em 0;\\r\\n}\\r\\n\\r\\n/* Grouping content\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE 9-.\\r\\n* 1. Add the correct display in IE.\\r\\n*/\\r\\n\\r\\nfigcaption,\\r\\nfigure,\\r\\nmain { /* 1 */\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct margin in IE 8.\\r\\n*/\\r\\n\\r\\nfigure {\\r\\n  margin: 1em 40px;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Add the correct box sizing in Firefox.\\r\\n* 2. Show the overflow in Edge and IE.\\r\\n*/\\r\\n\\r\\nhr {\\r\\n  box-sizing: content-box; /* 1 */\\r\\n  height: 0; /* 1 */\\r\\n  overflow: visible; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Correct the inheritance and scaling of font size in all browsers.\\r\\n* 2. Correct the odd `em` font sizing in all browsers.\\r\\n*/\\r\\n\\r\\npre {\\r\\n  font-family: monospace, monospace; /* 1 */\\r\\n  font-size: 1em; /* 2 */\\r\\n}\\r\\n\\r\\n/* Text-level semantics\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* 1. Remove the gray background on active links in IE 10.\\r\\n* 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\\r\\n*/\\r\\n\\r\\na {\\r\\n  background-color: transparent; /* 1 */\\r\\n  -webkit-text-decoration-skip: objects; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Remove the bottom border in Chrome 57- and Firefox 39-.\\r\\n* 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\r\\n*/\\r\\n\\r\\nabbr[title] {\\r\\n  border-bottom: none; /* 1 */\\r\\n  text-decoration: underline; /* 2 */\\r\\n  -webkit-text-decoration: underline dotted;\\r\\n          text-decoration: underline dotted; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Prevent the duplicate application of `bolder` by the next rule in Safari 6.\\r\\n*/\\r\\n\\r\\nb,\\r\\nstrong {\\r\\n  font-weight: inherit;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct font weight in Chrome, Edge, and Safari.\\r\\n*/\\r\\n\\r\\nb,\\r\\nstrong {\\r\\n  font-weight: bolder;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Correct the inheritance and scaling of font size in all browsers.\\r\\n* 2. Correct the odd `em` font sizing in all browsers.\\r\\n*/\\r\\n\\r\\ncode,\\r\\nkbd,\\r\\nsamp {\\r\\n  font-family: monospace, monospace; /* 1 */\\r\\n  font-size: 1em; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct font style in Android 4.3-.\\r\\n*/\\r\\n\\r\\ndfn {\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct background and color in IE 9-.\\r\\n*/\\r\\n\\r\\nmark {\\r\\n  background-color: #ff0;\\r\\n  color: #000;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct font size in all browsers.\\r\\n*/\\r\\n\\r\\nsmall {\\r\\n  font-size: 80%;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Prevent `sub` and `sup` elements from affecting the line height in\\r\\n* all browsers.\\r\\n*/\\r\\n\\r\\nsub,\\r\\nsup {\\r\\n  font-size: 75%;\\r\\n  line-height: 0;\\r\\n  position: relative;\\r\\n  vertical-align: baseline;\\r\\n}\\r\\n\\r\\nsub {\\r\\n  bottom: -0.25em;\\r\\n}\\r\\n\\r\\nsup {\\r\\n  top: -0.5em;\\r\\n}\\r\\n\\r\\n/* Embedded content\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE 9-.\\r\\n*/\\r\\n\\r\\naudio,\\r\\nvideo {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct display in iOS 4-7.\\r\\n*/\\r\\n\\r\\naudio:not([controls]) {\\r\\n  display: none;\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Remove the border on images inside links in IE 10-.\\r\\n*/\\r\\n\\r\\nimg {\\r\\n  border-style: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Hide the overflow in IE.\\r\\n*/\\r\\n\\r\\nsvg:not(:root) {\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n/* Forms\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* 1. Change the font styles in all browsers (opinionated).\\r\\n* 2. Remove the margin in Firefox and Safari.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\ninput,\\r\\noptgroup,\\r\\nselect,\\r\\ntextarea {\\r\\n  font-family: sans-serif; /* 1 */\\r\\n  font-size: 100%; /* 1 */\\r\\n  line-height: 1.15; /* 1 */\\r\\n  margin: 0; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Show the overflow in IE.\\r\\n* 1. Show the overflow in Edge.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\ninput { /* 1 */\\r\\n  overflow: visible;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Remove the inheritance of text transform in Edge, Firefox, and IE.\\r\\n* 1. Remove the inheritance of text transform in Firefox.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\nselect { /* 1 */\\r\\n  text-transform: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\\r\\n*    controls in Android 4.\\r\\n* 2. Correct the inability to style clickable types in iOS and Safari.\\r\\n*/\\r\\n\\r\\nbutton,\\r\\nhtml [type=\\\"button\\\"], /* 1 */\\r\\n[type=\\\"reset\\\"],\\r\\n[type=\\\"submit\\\"] {\\r\\n  -webkit-appearance: button; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Remove the inner border and padding in Firefox.\\r\\n*/\\r\\n\\r\\nbutton::-moz-focus-inner,\\r\\n[type=\\\"button\\\"]::-moz-focus-inner,\\r\\n[type=\\\"reset\\\"]::-moz-focus-inner,\\r\\n[type=\\\"submit\\\"]::-moz-focus-inner {\\r\\n  border-style: none;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Restore the focus styles unset by the previous rule.\\r\\n*/\\r\\n\\r\\nbutton:-moz-focusring,\\r\\n[type=\\\"button\\\"]:-moz-focusring,\\r\\n[type=\\\"reset\\\"]:-moz-focusring,\\r\\n[type=\\\"submit\\\"]:-moz-focusring {\\r\\n  outline: 1px dotted ButtonText;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Correct the padding in Firefox.\\r\\n*/\\r\\n\\r\\nfieldset {\\r\\n  padding: 0.35em 0.75em 0.625em;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Correct the text wrapping in Edge and IE.\\r\\n* 2. Correct the color inheritance from `fieldset` elements in IE.\\r\\n* 3. Remove the padding so developers are not caught out when they zero out\\r\\n*    `fieldset` elements in all browsers.\\r\\n*/\\r\\n\\r\\nlegend {\\r\\n  box-sizing: border-box; /* 1 */\\r\\n  color: inherit; /* 2 */\\r\\n  display: table; /* 1 */\\r\\n  max-width: 100%; /* 1 */\\r\\n  padding: 0; /* 3 */\\r\\n  white-space: normal; /* 1 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Add the correct display in IE 9-.\\r\\n* 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\\r\\n*/\\r\\n\\r\\nprogress {\\r\\n  display: inline-block; /* 1 */\\r\\n  vertical-align: baseline; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Remove the default vertical scrollbar in IE.\\r\\n*/\\r\\n\\r\\ntextarea {\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Add the correct box sizing in IE 10-.\\r\\n* 2. Remove the padding in IE 10-.\\r\\n*/\\r\\n\\r\\n[type=\\\"checkbox\\\"],\\r\\n[type=\\\"radio\\\"] {\\r\\n  box-sizing: border-box; /* 1 */\\r\\n  padding: 0; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Correct the cursor style of increment and decrement buttons in Chrome.\\r\\n*/\\r\\n\\r\\n[type=\\\"number\\\"]::-webkit-inner-spin-button,\\r\\n[type=\\\"number\\\"]::-webkit-outer-spin-button {\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Correct the odd appearance in Chrome and Safari.\\r\\n* 2. Correct the outline style in Safari.\\r\\n*/\\r\\n\\r\\n[type=\\\"search\\\"] {\\r\\n  -webkit-appearance: textfield; /* 1 */\\r\\n  outline-offset: -2px; /* 2 */\\r\\n}\\r\\n\\r\\n/**\\r\\n* Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\\r\\n*/\\r\\n\\r\\n[type=\\\"search\\\"]::-webkit-search-cancel-button,\\r\\n[type=\\\"search\\\"]::-webkit-search-decoration {\\r\\n  -webkit-appearance: none;\\r\\n}\\r\\n\\r\\n/**\\r\\n* 1. Correct the inability to style clickable types in iOS and Safari.\\r\\n* 2. Change font properties to `inherit` in Safari.\\r\\n*/\\r\\n\\r\\n::-webkit-file-upload-button {\\r\\n  -webkit-appearance: button; /* 1 */\\r\\n  font: inherit; /* 2 */\\r\\n}\\r\\n\\r\\n/* Interactive\\r\\n ========================================================================== */\\r\\n\\r\\n/*\\r\\n* Add the correct display in IE 9-.\\r\\n* 1. Add the correct display in Edge, IE, and Firefox.\\r\\n*/\\r\\n\\r\\ndetails, /* 1 */\\r\\nmenu {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n/*\\r\\n* Add the correct display in all browsers.\\r\\n*/\\r\\n\\r\\nsummary {\\r\\n  display: list-item;\\r\\n}\\r\\n\\r\\n/* Scripting\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE 9-.\\r\\n*/\\r\\n\\r\\ncanvas {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE.\\r\\n*/\\r\\n\\r\\ntemplate {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n/* Hidden\\r\\n ========================================================================== */\\r\\n\\r\\n/**\\r\\n* Add the correct display in IE 10-.\\r\\n*/\\r\\n\\r\\nbody {\\r\\n  height: 5000px;\\r\\n}\\r\\n\\r\\n[hidden] {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.fifty {\\r\\n  width: 50%;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown {\\r\\n  position: relative;\\r\\n  margin-top: 25px;\\r\\n  height: 200px;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-autocomplete-inputs {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-autocomplete-inputs input {\\r\\n  width: 100%;\\r\\n  padding: 6px 20px;\\r\\n  font-family: Arial;\\r\\n  font-weight: normal;\\r\\n  outline: none !important;\\r\\n  font-size: 15px;\\r\\n  height: 56px;\\r\\n  border: 1px solid #e0e0e0;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-autocomplete-placeholder {\\r\\n  position: absolute;\\r\\n  margin: 3px;\\r\\n  background-color: #fff;\\r\\n  padding: 17px 18px;\\r\\n  font-family: Arial;\\r\\n  font-weight: normal;\\r\\n  font-size: 15px;\\r\\n  width: calc(100% - 4px);\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown {\\r\\n  display: none;\\r\\n  border: 1px solid #e0e0e0;\\r\\n  z-index: 99999;\\r\\n  max-height: 280px;\\r\\n  overflow-x: hidden;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown.open {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown .dropdown-item {\\r\\n  width: 100%;\\r\\n  cursor: pointer;\\r\\n  padding: 18px 20px;\\r\\n  font-family: Arial;\\r\\n  font-weight: normal;\\r\\n  font-size: 15px;\\r\\n  height: 56px;\\r\\n  background-color: #ffffff;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown .dropdown-item:nth-child(odd) {\\r\\n  background-color: #efefef;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown .dropdown-item.active {\\r\\n  background-color: #0099cc;\\r\\n  color: #fff !important;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown .ng-dropdown .dropdown-item .dropdown-item-highlight {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown-icon {\\r\\n  display: block;\\r\\n  width: 56px;\\r\\n  text-align: center;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n  border-left: 1px solid #e0e0e0;\\r\\n  cursor: pointer;\\r\\n  z-index: 999;\\r\\n  font-size: 12px;\\r\\n  color: #758694;\\r\\n  padding: 21px 0;\\r\\n\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown-icon:after {\\r\\n  content: '';\\r\\n  display: block;\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n  border-left: 7px solid transparent;\\r\\n  border-right: 7px solid transparent;\\r\\n  border-top: 7px solid #000;\\r\\n  position: absolute;\\r\\n  right: 21px;\\r\\n  z-index: 999;\\r\\n  top: 24px;\\r\\n}\\r\\n\\r\\n.ng-autocomplete-dropdown-icon.open:after {\\r\\n  -webkit-transform: rotate(180deg);\\r\\n          transform: rotate(180deg);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Create Transaction </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>Master Code</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"CustomerName\\\" [(ngModel)]=\\\"transaction.CustomerCode\\\"  class=\\\"form-control col-md-4\\\"><h5 style=\\\"color: blue\\\"> {{CustomerName}}</h5>\\n                <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-2\\\" (click)=\\\"Search(transaction.CustomerCode)\\\"  style=\\\"background-color:#b2beb5\\\"><i class=\\\"fa fa-search\\\"></i> Search </a>\\n            </div>\\n            <label>Amount</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"number\\\" name=\\\"Amount\\\"  [(ngModel)]=\\\"transaction.Amount\\\" class=\\\"form-control col-md-4\\\">\\n            </div>\\n        </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"Ok(transaction)\\\" style=\\\"background-color: orange\\\">Save Transaction </a>\\n\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/transactionlog']\\\" style=\\\"background-color:#b2beb5\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject , ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport {  TransactionLogger } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { TransactionService } from '../service/transaction.service';\n// import {CreateNewAutocompleteGroup, SelectedAutocompleteItem, NgAutocompleteComponent} from 'ng-auto-complete';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-createtransaction',\n  templateUrl: './createtransaction.component.html',\n  styleUrls: ['./createtransaction.component.css']\n})\nexport class CreateTransactionComponent implements OnInit {\n\n  // @ViewChild(NgAutocompleteComponent) public completer: NgAutocompleteComponent;\n\n   baseurl: string = location.protocol + '//' + location.host + '/';\n\n   transaction: TransactionLogger = new TransactionLogger();\n  CustomerName: string;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: TransactionService) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n\n public Search(search: string) {\n\n  this.CustomerName = '';\n  if (search ===  null || search === undefined) {\n    this.toastr.error('customer code cannot be empty', 'Error Message');\n  }\n  const self = this;\n  this.service.getCustomerNameByCode(search).subscribe(c => {\n    if (c.Succeeded) {\n      self.CustomerName = c.Result;\n    } else  {\n      self.CustomerName = null;\n      self.transaction.CustomerCode = null;\n     self.toastr.error('Customer information not found', 'Error Message');\n\n    }\n\n  }, e => {\n    self.CustomerName = null;\n    self.transaction.CustomerCode = null;\n   self.toastr.error('Customer information not found', 'Error Message');\n\n  } );\n\n }\n\n public Ok(model: TransactionLogger) {\n\n   if (model == null) {\n     this.toastr.error('transaction posting cannot be empty', 'Error Message');\n     return;\n   }\n   if (model.Amount <= 0) {\n    this.toastr.error('transaction amount cannot be less than zero', 'Error Message');\n    return;\n   }\n   if (model.CustomerCode == null || model.CustomerCode === '') {\n    this.toastr.error('Customer code amount cannot be empty', 'Error Message');\n    return;\n   }\n    const  self = this;\n   this.service.PostTransactionLog(model).subscribe(c => {\n\n    if (c.Succeeded) {\n      model.Amount = 0;\n      model.CustomerCode = '';\n    self.toastr.success('Operation successful', 'Success');\n    } else {\n      model.Amount = 0;\n      model.CustomerCode = '';\n      self.toastr.error('Operation failed ', 'Error Message');\n    }\n\n   }, e => {\n\n      model.Amount = 0;\n      model.CustomerCode = '';\n      self.toastr.error('Transaction failed to create', 'Error Message');\n   });\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Credit Transactions List</h5>\\n              <p>The list shows all the   <code>credit</code> transaction\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a> -->\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Transaction No</th>\\n                              <th>Transaction Type</th>\\n                              <th>Customer Name</th>\\n                              <th>Customer Code</th>\\n                              <!-- <th>Transaction Message </th> -->\\n                              <th>Amount</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of transactions; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.TransactionNo}}</td>\\n                              <td>{{item.TransactionType}}</td>\\n                              <td>{{item.Customer.LastName}} {{item.Customer.FirstName}} </td>\\n                              <td>{{item.Customer.CustomerCode}}</td>\\n                              <!-- <td>{{item.TransactionMessage}}</td> -->\\n                              <td>₦{{item.Amount}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No transaction found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus, TransactionResponse } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { TransactionService } from '../service/transaction.service';\n\n@Component({\n  selector: 'app-credittransaction',\n  templateUrl: './credittransaction.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class CreditTransactionComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<TransactionResponse>;\n  public transactions: TransactionResponse[] = new Array<TransactionResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: TransactionService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<TransactionResponse> {\n\n      const self = this;\n\n      self.service.getCreditTransaction(pageIndex, this.pageSize).subscribe(resp => {\n\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n        return self.transactions;\n      }, err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      });\n      return self.transactions;\n    }\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Debit Transactions List</h5>\\n              <p>The list shows all the   <code>debit</code> transaction\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a> -->\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Transaction No</th>\\n                              <th>Transaction Type</th>\\n                              <th>Customer Name</th>\\n                              <th>Customer Code</th>\\n                              <!-- <th>Transaction Message </th> -->\\n                              <th>Amount</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of transactions; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.TransactionNo}}</td>\\n                              <td>{{item.TransactionType}}</td>\\n                              <td>{{item.Customer.LastName}} {{item.Customer.FirstName}} </td>\\n                              <td>{{item.Customer.CustomerCode}}</td>\\n                              <!-- <td>{{item.TransactionMessage}}</td> -->\\n                              <td>₦{{item.Amount}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No transaction found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus, TransactionResponse } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { TransactionService } from '../service/transaction.service';\n\n@Component({\n  selector: 'app-debittransaction',\n  templateUrl: './debittransaction.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class DebitTransactionComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<TransactionResponse>;\n  public transactions: TransactionResponse[] = new Array<TransactionResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: TransactionService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<TransactionResponse> {\n\n      const self = this;\n\n      self.service.getDebitTransaction(pageIndex, this.pageSize).subscribe(resp => {\n\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n        return self.transactions;\n      }, err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      });\n      return self.transactions;\n    }\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">All Transactions Report</h5>\\n              <p>The list shows all the transaction either <code>credit</code>  or <code>debit</code>\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                      <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" [routerLink]=\\\"['/createtransaction']\\\" ><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a> -->\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                          &nbsp; <span>StartDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                          &nbsp; <span>EndDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                          &nbsp;\\n                          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearchTransaction(searchModel)\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered\\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Transaction No</th>\\n                              <th>Transaction Type</th>\\n                              <th>Customer Name</th>\\n                              <th>Customer Code</th>\\n                              <th>Merchant Name</th>\\n                              <th>Agent Name</th>\\n                              <th>Amount</th>\\n                              <th>Entry Date </th>\\n                              <th>Approval </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of transactions; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.TransactionNo}}</td>\\n                              <td>{{item.TransactionType}}</td>\\n                              <td>{{item.Customer.LastName}} {{item.Customer.FirstName}} </td>\\n                              <td>{{item.Customer.CustomerCode}}</td>\\n                              <td>{{item.MerchantName}}</td>\\n                              <td>{{item.AgentName}}</td>\\n                              <td>₦{{item.Amount}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                              <td>Approved</td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No transaction found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus, TransactionResponse, SearchModel } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { TransactionService } from '../service/transaction.service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<TransactionResponse>;\n  public transactions: TransactionResponse[] = new Array<TransactionResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  public searchModel: SearchModel = new SearchModel();\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: TransactionService) {\n\n  }\n\n  public reloadPage() {\n    document.location.reload();\n  }\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<TransactionResponse> {\n\n      const self = this;\n\n      self.service.getTransaction(pageIndex, this.pageSize).subscribe(resp => {\n\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n        return self.transactions;\n      }, err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      });\n      return self.transactions;\n    }\n\n\n    public SearchTransaction(searchMod: SearchModel) {\n\n      const self = this;\n      self.service.getTransactionSearch(searchMod).subscribe(resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n        return self.transactions;\n      }, err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      });\n      return self.transactions;\n    }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Transaction Log List</h5>\\n              <p>The list shows all <code>credit</code> transaction logs\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" [routerLink]=\\\"['/createtransaction']\\\" ><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a>\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Transaction No</th>\\n                              <th>Transaction Type</th>\\n                              <th>Customer Name</th>\\n                              <th>Merchant Name</th>\\n                              <th>Agent Name</th>\\n                              <th>Customer Code</th>\\n                              <th>Amount</th>\\n                              <th>Transaction Status</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of transactions; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.TransactionNo}}</td>\\n                              <td>{{item.TransactionType}}</td>\\n                              <td>{{item.Customer.LastName}} {{item.Customer.FirstName}} </td>\\n                              <td>{{item.MerchantName}}</td>\\n                              <td>{{item.AgentName}}</td>\\n                              <td>{{item.Customer.CustomerCode}}</td>\\n                              <td>₦{{item.Amount}}</td>\\n                              <td>{{item.IsApproved ? 'Approved' :'Pending' }}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                              <td *ngIf=\\\"roleName == 'Merchant Admin'\\\">\\n                              <a href=\\\"javascript:;\\\" class=\\\"btn btn-sm mb-3\\\" (click)=\\\"ApproveTransaction(item.Id)\\\" style=\\\"background-color:orange\\\">Approve </a> &nbsp;\\n                              <a href=\\\"javascript:;\\\" class=\\\"btn btn-sm mb-3\\\" (click)=\\\"DeclineTransaction(item.Id)\\\" style=\\\"background-color:#b2beb5\\\" > Decline </a>\\n                              </td>\\n                          </tr>\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Transaction found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Constants } from \"../shared/Constants\";\nimport * as $ from \"jquery\";\nimport { ReportService } from \"../service/report.service\";\nimport {\n  Dashboard,\n  DashboardModel,\n  Customer,\n  RecordStatus,\n  TransactionResponse\n} from \"../shared/model\";\nimport { Observable } from \"rxjs\";\nimport { SequencePage } from \"../shared/sequencepage\";\nimport { TransactionService } from \"../service/transaction.service\";\n\n@Component({\n  selector: \"app-transactionlog\",\n  templateUrl: \"./transactionlog.component.html\"\n  // styleUrls: ['./customer.component.css']\n})\nexport class TransactionLogComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n  public data: SequencePage<TransactionResponse>;\n  public transactions: TransactionResponse[] = new Array<TransactionResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  public searchString: string;\n  public roleName: string;\n\n  constructor(\n    private router: Router,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private service: TransactionService\n  ) {}\n\n  ngOnInit() {\n    this.roleName = this.storage.GetUserInfo().Role;\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {}\n  LoadFirstPage() {\n    const get = this.Get(0);\n    this.hasPage = this.HasNoPage();\n    return get;\n  }\n\n  LoadLastPage() {\n    if (this.data) {\n      return this.Get(Math.ceil(this.data.SequenceLength / this.pageSize) - 1);\n    }\n  }\n\n  HasNoPage(): boolean {\n    const result: boolean =\n      this.data == null ||\n      typeof this.data === \"undefined\" ||\n      this.data.Page.length === 0;\n\n    return result;\n  }\n\n  public Get(pageIndex?: number): Array<TransactionResponse> {\n    const self = this;\n\n    self.service.getTransactionLog(pageIndex, this.pageSize).subscribe(\n      resp => {\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<TransactionResponse>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.transactions = self.data.Page;\n        }\n\n        return self.transactions;\n      },\n      err => {\n        self.data = new SequencePage<TransactionResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.transactions;\n      }\n    );\n    return self.transactions;\n  }\n\n  public DeclineTransaction(id: number) {\n    const self = this;\n\n    if (!confirm(\"Are you sure\")) {\n      self.toastr.success(\"operation cancelled successfully\", \"Success\");\n      return;\n    }\n    this.service.DelineTransaction(id).subscribe(\n      c => {\n        if (c.Succeeded) {\n          self.LoadFirstPage();\n          self.toastr.success(\"Operation Successful\");\n        } else {\n          self.toastr.error(\"Operation failed\");\n        }\n      },\n      e => {\n        self.toastr.error(\"Operation failed\");\n      }\n    );\n  }\n  public ApproveTransaction(id: number) {\n    const self = this;\n    this.service.ApproveTransaction(id).subscribe(\n      c => {\n        if (c.Succeeded) {\n          self.LoadFirstPage();\n          self.toastr.success(\"Operation Successful\");\n        } else {\n          self.toastr.error(\"Operation failed\");\n        }\n      },\n      e => {\n        self.toastr.error(\"Operation failed\");\n      }\n    );\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Approved Withdrawal List</h5>\\n              <p>The list shows all the  <code>approved</code> withdrawals\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a> -->\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered\\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Customer Name </th>\\n                              <th>Customer Code</th>\\n                              <th>Amount</th>\\n                              <th>Withdrawal Status</th>\\n                              <th>Reason</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.Customer.FirstName}} {{item.Customer.LastName}}</td>\\n                              <td>{{item.Customer.CustomerCode}} </td>\\n                              <td>₦{{item.Amount}} </td>\\n                              <td> {{GetWithdrawalStatus(item.WithdrawalStatus)}}</td>\\n                              <td>{{item.Message}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Customer found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { RecordStatus, WithdrawalResponse } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { WithdrawalService } from '../service/withdrawal.service';\n\n@Component({\n  selector: 'app-approvedwithdrawal',\n  templateUrl: './approvedwithdrawal.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class ApprovedWithdrawalComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<WithdrawalResponse>;\n  public response: WithdrawalResponse[] = new Array<WithdrawalResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: WithdrawalService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<WithdrawalResponse> {\n      const self = this;\n\n      self.service.getApproveWithdrawal(pageIndex, this.pageSize).subscribe(resp => {\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<WithdrawalResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.response = self.data.Page;\n        }\n        return self.response;\n      }, err => {\n        self.data = new SequencePage<WithdrawalResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.response;\n      });\n      return self.response;\n    }\n    public GetWithdrawalStatus(status: number): string {\n      if (status === 0) {\n        return 'Pending';\n      } else if (status === 1) {\n        return 'Approved';\n       } else if (status === 2) {\n        return 'Paid';\n      }\n    }\n\n    public ViewCustomer(id: number) {\n\n\n    }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Create Withdrawal </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>Master Code</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" name=\\\"CustomerName\\\" [(ngModel)]=\\\"withdrawal.CustomerCode\\\"  class=\\\"form-control col-md-4\\\"><h5 style=\\\"color: blue\\\"> {{CustomerName}}</h5>\\n                <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-2\\\" (click)=\\\"Search(withdrawal.CustomerCode)\\\"  style=\\\"background-color:#b2beb5\\\"><i class=\\\"fa fa-search\\\"></i> Search </a>\\n            </div>\\n            <label>Amount</label>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"number\\\" name=\\\"Amount\\\"  [(ngModel)]=\\\"withdrawal.Amount\\\" class=\\\"form-control col-md-4\\\">\\n            </div>\\n        </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"Ok(withdrawal)\\\" style=\\\"background-color: orange\\\">Save Withdrawal </a>\\n\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/withdrawal']\\\" style=\\\"background-color:#b2beb5\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject , ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport {  TransactionLogger, WithdrawalLogger } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { TransactionService } from '../service/transaction.service';\n// import {CreateNewAutocompleteGroup, SelectedAutocompleteItem, NgAutocompleteComponent} from 'ng-auto-complete';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { WithdrawalService } from '../service/withdrawal.service';\n\n@Component({\n  selector: 'app-createwithdrawal',\n  templateUrl: './createwithdrawal.component.html',\n})\nexport class CreateWithdrawalComponent implements OnInit {\n\n  // @ViewChild(NgAutocompleteComponent) public completer: NgAutocompleteComponent;\n\n   baseurl: string = location.protocol + '//' + location.host + '/';\n\n   withdrawal: WithdrawalLogger = new WithdrawalLogger();\n  CustomerName: string;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: WithdrawalService) {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n\n public Search(search: string) {\n\n  this.CustomerName = '';\n  if (search ===  null || search === undefined) {\n    this.toastr.error('customer code cannot be empty', 'Error Message');\n  }\n  const self = this;\n  this.service.getCustomerNameByCode(search).subscribe(c => {\n    if (c.Succeeded) {\n      self.CustomerName = c.Result;\n    } else  {\n      self.CustomerName = null;\n      self.withdrawal.CustomerCode = null;\n     self.toastr.error('Customer information not found', 'Error Message');\n\n    }\n\n  }, e => {\n    self.CustomerName = null;\n    self.withdrawal.CustomerCode = null;\n   self.toastr.error('Customer information not found', 'Error Message');\n\n  } );\n\n }\n\n public Ok(model: WithdrawalLogger) {\n\n\n   if (model == null) {\n     this.toastr.error('withdrawal posting cannot be empty', 'Error Message');\n     return;\n   }\n   if (model.Amount <= 0) {\n    this.toastr.error('withdrawal amount cannot be less than zero', 'Error Message');\n    return;\n   }\n   if (model.CustomerCode == null || model.CustomerCode === '') {\n    this.toastr.error('Customer code amount cannot be empty', 'Error Message');\n    return;\n   }\n\n   \n    const  self = this;\n   this.service.PostWithdrawal(model).subscribe(c => {\n\n    if (c.Succeeded) {\n      model.Amount = 0;\n      model.CustomerCode = '';\n    self.toastr.success('Operation successful', 'Success');\n    } else {\n      model.Amount = 0;\n      model.CustomerCode = '';\n      self.toastr.error('Operation failed ' + c.Message, 'Error Message');\n    }\n\n   }, e => {\n\n      model.Amount = 0;\n      model.CustomerCode = '';\n      self.toastr.error('Transaction failed to create', 'Error Message');\n   });\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">Paid Withdrawal List</h5>\\n              <p>The list shows all the   <code>Paid</code> withdrawals\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <!-- <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i> Add Transaction </a> -->\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control form-control-sm mar-5\\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchString\\\" type=\\\"text\\\">\\n                          <!-- <select class=\\\"form-control form-control-sm\\\">\\n                              <option selected=\\\"selected\\\" value=\\\"\\\">\\n                                  Select Status\\n                              </option>\\n                              <option value=\\\"Pending\\\">\\n                                  Pending\\n                              </option>\\n                              <option value=\\\"Completed\\\">\\n                                  Completed\\n                              </option>\\n                              <option value=\\\"Cancelled\\\">\\n                                  Cancelled\\n                              </option>\\n                          </select> -->\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Customer Name </th>\\n                              <th>Customer Code</th>\\n                              <th>Amount</th>\\n                              <th>Withdrawal Status</th>\\n                              <th>Reason</th>\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.Customer.FirstName}} {{item.Customer.LastName}}</td>\\n                              <td>{{item.Customer.CustomerCode}} </td>\\n                              <td>₦{{item.Amount}} </td>\\n                              <td> {{GetWithdrawalStatus(item.WithdrawalStatus)}}</td>\\n                              <td>{{item.Message}}</td>\\n                              <td>{{item.CreatedDate | date }}</td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Customer found</span>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { Constants } from '../shared/Constants';\nimport * as $ from 'jquery';\nimport { ReportService } from '../service/report.service';\nimport { Dashboard, DashboardModel, Customer, RecordStatus, TransactionResponse, WithdrawalResponse, WithdrawalStatus } from '../shared/model';\nimport { Observable } from 'rxjs';\nimport { SequencePage } from '../shared/sequencepage';\nimport { TransactionService } from '../service/transaction.service';\nimport { WithdrawalService } from '../service/withdrawal.service';\n\n@Component({\n  selector: 'app-paidwithdrawal',\n  templateUrl: './paidwithdrawal.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class PaidWithdrawalComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<WithdrawalResponse>;\n  public response: WithdrawalResponse[] = new Array<WithdrawalResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n  WithdrawalStatus: WithdrawalStatus = new WithdrawalStatus() ;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: WithdrawalService) {\n\n  }\n\n  ngOnInit() {\n    this.LoadFirstPage();\n  }\n\n  GetStatus(status: RecordStatus) {\n\n  }\n    LoadFirstPage() {\n      const get = this.Get(0);\n      this.hasPage = this.HasNoPage();\n      return get;\n    }\n\n    LoadLastPage() {\n\n      if (this.data) {\n        return this.Get((Math.ceil(this.data.SequenceLength / this.pageSize) - 1));\n      }\n    }\n\n    HasNoPage(): boolean {\n      const result: boolean = this.data == null\n      || typeof this.data === 'undefined'\n      || this.data.Page.length === 0;\n\n      return result;\n    }\n\n    public Get(pageIndex?: number): Array<WithdrawalResponse> {\n\n      const self = this;\n\n      self.service.getPaidWithdrawal(pageIndex, this.pageSize).subscribe(resp => {\n\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<WithdrawalResponse>(_page.Page, _page.SequenceLength, _page.PageSize, _page.PageIndex);\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.response = self.data.Page;\n        }\n        return self.response;\n      }, err => {\n        self.data = new SequencePage<WithdrawalResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.response;\n      });\n      return self.response;\n    }\n\n    public GetWithdrawalStatus(status: number): string {\n      if (status === 0) {\n        return 'Pending';\n      } else if (status === 1) {\n        return 'Approved';\n       } else if (status === 2) {\n        return 'Paid';\n      }\n    }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n     <div class=\\\"content content-custom\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n              <h5 class=\\\"title\\\">All Withdrawal Report </h5>\\n              <p>The list shows all the withdrawal either <code>approved</code>  or <code>paid</code>\\n          </p>\\n              <hr>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" [routerLink]=\\\"['/createwithdrawal']\\\"><i class=\\\"fa fa-plus\\\"></i> Add Withdrawal </a> &nbsp;\\n                      <a href=\\\"javascript:;\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"reloadPage()\\\">Refresh </a>\\n                      <!-- <a href=\\\"#\\\" class=\\\"btn btn-default btn-sm\\\">Archive</a>\\n                      <a href=\\\"#\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</a> -->\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                      <form class=\\\"form-inline justify-content-sm-end\\\">\\n                          <input class=\\\"form-control \\\" placeholder=\\\"Search\\\" name=\\\"searchString\\\" [(ngModel)]=\\\"searchModel.Search\\\" type=\\\"text\\\">\\n                          &nbsp; <span>StartDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"stardate\\\" name=\\\"stardate\\\" [(ngModel)]=\\\"searchModel.StartDate\\\" >\\n                          &nbsp; <span>EndDate</span>\\n                          <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"enddate\\\" name=\\\"enddate\\\" [(ngModel)]=\\\"searchModel.EndDate\\\" >\\n                          &nbsp;\\n                          <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-sm mb-2\\\" (click)=\\\"SearchWithdrawal(searchModel)\\\"  style=\\\"background-color: orange\\\"><i class=\\\"fa fa-search\\\"></i>Search </a>\\n                      </form>\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n              <div class=\\\"table-fixed\\\" style=\\\"overflow: scroll; height: 800px\\\">\\n\\n                  <table class=\\\"table table-bordered \\\">\\n                      <thead>\\n                          <tr class=\\\"h6\\\">\\n                              <th>SN</th>\\n                              <th>Customer Name </th>\\n                              <th>Customer Code</th>\\n                              <th>Amount</th>\\n                              <th>Withdrawal Status</th>\\n                              <!-- <th>Reason</th> -->\\n                              <th>Entry Date </th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr *ngFor=\\\"let item of response; let i=index \\\">\\n                              <td>{{i+1}}</td>\\n                              <td>{{item.Customer.FirstName}} {{item.Customer.LastName}}</td>\\n                              <td>{{item.Customer.CustomerCode}} </td>\\n                              <td>₦{{item.Amount}} </td>\\n                              <td>{{GetWithdrawalStatus(item.WithdrawalStatus)}}</td>\\n                              <!-- <td>{{item.Message}}</td> -->\\n                              <td>{{item.CreatedDate | date }}</td>\\n                              <td *ngIf=\\\"roleName == 'Merchant Admin'\\\">\\n                                  <a href=\\\"javascript:;\\\" [hidden]=\\\"GetWithdrawalStatus(item.WithdrawalStatus) === 'Paid' \\\" class=\\\"btn btn-sm mb-3\\\" (click)=\\\"ShowApprovalForm(item.Id)\\\" style=\\\"background-color:orange\\\">Approve </a> &nbsp;\\n                                  <a href=\\\"javascript:;\\\" [hidden]=\\\"GetWithdrawalStatus(item.WithdrawalStatus) === 'Paid' \\\" class=\\\"btn btn-sm mb-3\\\" (click)=\\\"DeclineWithdrawal(item.Id)\\\" style=\\\"background-color:#b2beb5\\\" >Decline </a>\\n                              </td>\\n                          </tr>\\n\\n                      </tbody>\\n                  </table>\\n                  <!-- <div *ngIf=\\\"!hasPage\\\" style=\\\"text-align: center; font-size:18px; margin-top:20px;\\\">\\n                      <span class=\\\"text-muted\\\" style=\\\"font-size:22px;\\\">No Withdrawal found</span>\\n                    </div> -->\\n\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\" style=\\\"text-align:right\\\">\\n                        <ul class=\\\"pagination\\\">\\n                          <li style=\\\"font-size:18px;\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\"  (click)=\\\"LoadFirstPage()\\\"> &laquo; &nbsp; </a> </li>\\n                          <li *ngFor=\\\"let p of pageLinks\\\" style=\\\"font-size:18px;\\\">\\n                            <a href=\\\"javascript:void(0)\\\" class=\\\"page-link\\\" (click)=\\\"Get(p)\\\">\\n                              {{p + 1}}\\n                            </a>\\n                          </li>\\n                          <li style=\\\"font-size:18px\\\"><a href=\\\"javascript:void(0)\\\" style=\\\"text-decoration:none\\\" (click)=\\\"LoadLastPage()\\\" >&nbsp;  &raquo; </a></li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { StorageService } from \"../service/storage.service\";\nimport { Ng4LoadingSpinnerService } from \"ng4-loading-spinner\";\nimport { ToastrService } from \"ngx-toastr\";\nimport {\n  RecordStatus,\n  WithdrawalResponse,\n  WithdrawApprovalModel,\n  SearchModel\n} from \"../shared/model\";\nimport { SequencePage } from \"../shared/sequencepage\";\nimport { WithdrawalService } from \"../service/withdrawal.service\";\nimport { switchMap } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-withdrawal\",\n  templateUrl: \"./withdrawal.component.html\"\n  // styleUrls: ['./customer.component.css']\n})\nexport class WithdrawalComponent implements OnInit {\n  baseurl: string = location.protocol + \"//\" + location.host + \"/\";\n  public data: SequencePage<WithdrawalResponse>;\n  public response: WithdrawalResponse[] = new Array<WithdrawalResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n  public withd: WithdrawApprovalModel = new WithdrawApprovalModel();\n  public roleName: string;\n\n  public searchModel: SearchModel = new SearchModel();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: ToastrService,\n    private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private service: WithdrawalService\n  ) {}\n\n  public reloadPage() {\n    document.location.reload();\n  }\n\n  ngOnInit() {\n    this.roleName = this.storage.GetUserInfo().Role;\n    this.LoadFirstPage();\n  }\n\n  LoadFirstPage() {\n    const get = this.Get(0);\n    this.hasPage = this.HasNoPage();\n    return get;\n  }\n\n  LoadLastPage() {\n    if (this.data) {\n      return this.Get(Math.ceil(this.data.SequenceLength / this.pageSize) - 1);\n    }\n  }\n\n  HasNoPage(): boolean {\n    const result: boolean =\n      this.data == null ||\n      typeof this.data === \"undefined\" ||\n      this.data.Page.length === 0;\n\n    return result;\n  }\n\n  public ShowApprovalForm(id: number) {\n    // const wid = this.route.snapshot.paramMap.get('id');\n\n    this.router.navigate([\"/withdrawalagent\", id]);\n  }\n\n  public Get(pageIndex?: number): Array<WithdrawalResponse> {\n    const self = this;\n\n    self.service.getWithdrawal(pageIndex, this.pageSize).subscribe(\n      resp => {\n        const _page = resp.Result;\n\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<WithdrawalResponse>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.response = self.data.Page;\n        }\n        return self.response;\n      },\n      err => {\n        self.data = new SequencePage<WithdrawalResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.response;\n      }\n    );\n    return self.response;\n  }\n\n  public GetWithdrawalStatus(status: number): string {\n    if (status === 0) {\n      return \"Pending\";\n    } else if (status === 1) {\n      return \"Approved\";\n    } else if (status === 2) {\n      return \"Paid\";\n    }\n  }\n  // WithdrawalDecline\n  public ApproveWithdrawal(id: number) {\n    const self = this;\n    this.withd.WithdrawalId = id;\n    this.withd.AgentUserId = 0;\n\n    this.service.WithdrawalApproval(this.withd).subscribe(\n      c => {\n        if (c.Succeeded) {\n          self.LoadFirstPage();\n          self.toastr.success(\"Operation Successful\");\n        } else {\n          self.toastr.error(c.Message);\n        }\n      },\n      e => {\n        self.toastr.error(\"Operation failed \" + e);\n      }\n    );\n  }\n\n  public DeclineWithdrawal(id: number) {\n    const self = this;\n    if (!confirm(\"Are you sure\")) {\n      self.toastr.success(\"operation cancelled successfully\", \"Success\");\n      return;\n    }\n    this.service.WithdrawalDecline(id).subscribe(\n      c => {\n        if (c.Succeeded) {\n          self.LoadFirstPage();\n          self.toastr.success(\"Operation Successful\");\n        } else {\n          self.toastr.error(c.Message);\n        }\n      },\n      e => {\n        self.toastr.error(\"Operation failed \" + e);\n      }\n    );\n  }\n\n  public SearchWithdrawal(searchMod: SearchModel) {\n    const self = this;\n\n    self.service.getWithdrawalSearch(searchMod).subscribe(\n      resp => {\n        const _page = resp.Result;\n        if (_page.PageSize === 0) {\n          // <-- debug stuff\n          self.pageLinks = [];\n        } else {\n          self.data = new SequencePage<WithdrawalResponse>(\n            _page.Page,\n            _page.SequenceLength,\n            _page.PageSize,\n            _page.PageIndex\n          );\n          self.pageLinks = self.data.AdjacentIndexes(2);\n          self.response = self.data.Page;\n        }\n        return self.response;\n      },\n      err => {\n        self.data = new SequencePage<WithdrawalResponse>([], 0);\n        self.pageLinks = self.data.AdjacentIndexes(2);\n        return self.response;\n      }\n    );\n    return self.response;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\" style=\\\"overflow: scroll\\\">\\n  <app-navigation></app-navigation>\\n  <div class=\\\"main-panel ps-container ps-theme-default ps-active-y\\\"  data-ps-id=\\\"b6cf33ed-96e2-9b09-5a3a-775d748c89a4\\\">\\n  <app-topnav></app-topnav>\\n  <div class=\\\"panel-header panel-header-sm panel-header-custom\\\">\\n </div>\\n <div class=\\\"content content-custom\\\">\\n  <div class=\\\"card \\\">\\n    <div class=\\\"card-header \\\">\\n        <h4 class=\\\"card-title\\\">Merchant Agent </h4>\\n    </div>\\n    <div class=\\\"card-body \\\">\\n      <div class=\\\"row\\\">\\n       <div class=\\\"col-md-6\\\">\\n        <form method=\\\"#\\\" action=\\\"#\\\">\\n            <label>Agent Name</label>\\n                 <select class=\\\"form-control form-control-sm\\\" name=\\\"role\\\" [(ngModel)]=\\\"withd.AgentUserId\\\">\\n                      <option *ngFor=\\\"let item of agentUserAdmins\\\" value=\\\"{{item.AgentUserId}}\\\">\\n                         {{item.Name}}\\n                       </option>\\n                 </select>\\n        </form>\\n       </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"card-footer \\\">\\n        <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" (click)=\\\"ApproveWithdrawal(withd)\\\" style=\\\"background-color: orange\\\">Post Withdrawal </a>\\n        &nbsp; <a href=\\\"javascript:;\\\" class=\\\"btn btn btn-lg mb-3\\\" [routerLink]=\\\"['/withdrawal']\\\" style=\\\"background-color:#b2beb5\\\" > Back to List </a>\\n    </div>\\n</div>\\n</div>\\n\\n </div>\\n </div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute  } from '@angular/router';\nimport { StorageService } from '../service/storage.service';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { RecordStatus, WithdrawalResponse, WithdrawApprovalModel, AgentUserAdmin } from '../shared/model';\nimport { SequencePage } from '../shared/sequencepage';\nimport { WithdrawalService } from '../service/withdrawal.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-withdrawalagent',\n  templateUrl: './withdrawalagent.component.html',\n  // styleUrls: ['./customer.component.css']\n})\nexport class WithdrawalAgentComponent implements OnInit {\n\n  baseurl: string = location.protocol + '//' + location.host + '/';\n  public data: SequencePage<WithdrawalResponse>;\n  public response: WithdrawalResponse[] = new Array<WithdrawalResponse>();\n  public pageIndex = 1;\n  public pageSize = 100;\n  public pageLinks: number[] = [];\n  public hasPage: boolean;\n  public withd: WithdrawApprovalModel = new WithdrawApprovalModel();\n   public withdrawalId: number;\n   public agentUserAdmins: AgentUserAdmin[] = new Array<AgentUserAdmin>();\n\n  constructor(private router: Router, private route: ActivatedRoute,\n    private toastr: ToastrService, private storage: StorageService,\n    private spinnerService: Ng4LoadingSpinnerService, private service: WithdrawalService) {\n\n      const wid = this.route.snapshot.paramMap.get('id');\n\n      if (wid !== null) {\n          this.withdrawalId = Number(wid);\n      }\n  }\n\n  ngOnInit() {\n     const self = this;\n\n    this.service.GetSystemAdmin().subscribe(c => {\n\n       if (c.Succeeded) {\n        self.agentUserAdmins = c.Result;\n       }\n\n    });\n  }\n\n    public GetWithdrawalStatus(status: number): string {\n      if (status === 0) {\n        return 'Pending';\n      } else if (status === 1) {\n        return 'Approved';\n       } else if (status === 2) {\n        return 'Paid';\n      }\n    }\n\n    public Ok(model: WithdrawApprovalModel) {\n\n    }\n    public ShowApprovalForm(id: number) {\n     // const wid = this.route.snapshot.paramMap.get('id');\n\n     this.router.navigate(['/withdrawalagent', id]);\n    }\n    public ApproveWithdrawal(model: AgentUserAdmin ) {\n\n     const self = this;\n     this.withd.WithdrawalId = this.withdrawalId;\n\n     this.service.WithdrawalApproval(this.withd).subscribe(c => {\n\n   if (c.Succeeded) {\n    self.toastr.success('Operation Successful');\n   } else {\n     self.toastr.error(c.Message);\n   }\n      }, e => {\n      self.toastr.error('Operation failed ' + e);\n      });\n     }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}